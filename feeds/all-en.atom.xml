<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Andre Fellipe</title><link href="https://andrefellipe.com/" rel="alternate"></link><link href="https://andrefellipe.com/feeds/all-en.atom.xml" rel="self"></link><id>https://andrefellipe.com/</id><updated>2025-10-13T15:28:00-03:00</updated><subtitle>made on the internet</subtitle><entry><title>Spider-Man: The Animated Series (Season 04)</title><link href="https://andrefellipe.com/spider-man-season-four.html" rel="alternate"></link><published>2025-10-13T15:08:00-03:00</published><updated>2023-10-13T15:08:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2025-10-13:/spider-man-season-four.html</id><summary type="html">&lt;p class="first last"&gt;Once again, we're back. I'll finish these reviews of the show until the end of 2025. I promise. This post was written to the sound of Alt J's &lt;a class="reference external" href="https://en.wikipedia.org/wiki/An_Awesome_Wave"&gt;An Awesome Wave&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=rVeMiVU77wo"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;After the best episode of the series, Season 4 of &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt; has high expectations. Can the show keep the momentum? Let's find out.&lt;/p&gt;
&lt;p&gt;Bob Richardson directed all episodes.&lt;/p&gt;
&lt;div class="section" id="guilty"&gt;
&lt;h2&gt;&lt;strong&gt;Guilty&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the first episode of the fourth season of the Spider-Man 1994 television series." class="align-center" src="images/15-01-S04E01-guilty.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I hope you'll change your mind about taking pictures of Spider-Man, Peter. I've never been more convinced in my life that Spider-Man is a true hero. I know his job's not easy, but he's exactly what this city, this world, needs right now. I hope he never gives up.&amp;quot; - Joseph Robertson&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by:&lt;/strong&gt; Larry Brody and Meg McLaughlin.&lt;/p&gt;
&lt;p&gt;Guilt is a strong sentiment that drives Spider-Man for most of the premiere. Flashbacks from the previous Season Finale start us this season and what follows is a conflicted Spider-Man that thinks that his antics do more harm than good. We went in this place before in the series, but this time the stakes are higher since we are talking about the disappearance of Mary Jane. To surpass this, a small redemption story is a good starting point. Kingpin sets up Robbie and Spider-Man partners with &amp;quot;Jigsaw&amp;quot; Jameson to save him. The dynamic between the journalist and the hero here is great, generating some laughs along the way. While the episode is nice, it also feels like we already have this discussion about how Spider-Man does good to the world before in the series, so I believe that not much was added to the topic here. A solid start to the season to get us started.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-cat"&gt;
&lt;h2&gt;&lt;strong&gt;The Cat&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the second episode of the fourth season of the Spider-Man 1994 television series." class="align-center" src="images/15-02-S04E02-cat.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Why do I always fall for mysterious men? Jason, Michael, Spider-Man. Men who are wrapped in the dark blanket of the night.&amp;quot; - Felicia Hardy&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Sean Catherine Derek.&lt;/p&gt;
&lt;p&gt;Felicia Hardy was always an interesting presence throughout the series, but it is about to receive a new spotlight as the Black Cat. This episode starts this, with her family once again in trouble. The way the writing combines a Kingpin plot with Captain America's origin and the Hardy family is really well done and a clever connection between stories. I am excited to have this new approach on the character and this kickoff of the plot shows how the show can take a side character and make a interesting storyline with deep connections to well-known comic book arcs. The lowlight here was Dr. Octopus just being a hired gun for the Kingpin, even though we know that the character can be much more.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-black-cat"&gt;
&lt;h2&gt;&lt;strong&gt;The Black Cat&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the third episode of the fourth season of the Spider-Man 1994 television series." class="align-center" src="images/15-03-S04E03-black.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Ever hear the phrase, divide and conquer?&amp;quot; - Black Cat&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Marty Isenberg, Robert N. Skir, and Sean Catherine Derek.&lt;/p&gt;
&lt;p&gt;The Black Cat is now officially with us. Kingpin develops the serum to create the Super Soldiers and applies it on Felicia Hardy. In this beginning, Spider-Man has great chemistry with her. The initial scene between them has great lines and tension that resonates through the rest of the episode. One of the best aspects of this relationship is that the Black Cat respected Spider-Man's identity and he does not know who she is, which makes the partnership more fun. Overall, Kingpin's plan to create super criminals is a little stupid and one of the instances where his idea makes little sense and is needed only to advance the plot. Even with a soft story, the moments between the main characters and the Hardy family more than make things up.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-return-of-kraven"&gt;
&lt;h2&gt;&lt;strong&gt;The Return of Kraven&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the fourth episode of the fourth season of the Spider-Man 1994 television series." class="align-center" src="images/15-04-S04E04-kraven.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;There's nothing that beast can dish out that this beauty can't handle.&amp;quot; - Black Cat&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Meg McLaughlin.&lt;/p&gt;
&lt;p&gt;A good story needs a good villain. While the addition of the Black Cat is adding a lot to the show, Kraven returning does not do much for me. The best part of this episode is Spider-Man turning away the Black Cat for fear of hurting someone once again. Our hero turns to bitterness in multiple points of the episode while trying to understand why Kraven is back. The plot involving the Hunter is not that interesting, but the character moments from all characters here makes up for it. The ending is also an interesting part, with Peter moving in with Harry even after their issues throughout the last season. An enjoyable - even though forgettable - installment of the show.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="partners"&gt;
&lt;h2&gt;&lt;strong&gt;Partners&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the fifth episode of the fourth season of the Spider-Man 1994 television series." class="align-center" src="images/15-05-S04E05-partners.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Maybe I should take superhero lessons from the Hulk instead.&amp;quot; - Black Cat&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Cynthia Harrison and Brooks Wachtel.&lt;/p&gt;
&lt;p&gt;The fourth season of &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt; relies a lot on the dynamic between Spider-Man and the Black Cat, positioning her as a main recurrent character in a way we did not see before in the series. Even so, we arrive at the fifth episode of the season without a major storyline itself besides the relationship between them. This results in episodes such as &lt;strong&gt;Partners&lt;/strong&gt;, where the stakes are not that high, but the show still keeps delivering enjoyable adventures. This time, the cast of the episode involves a lot of villains, but the highlight goes to the Scorpion, one of the best characters of the show. Here, he fights to cure himself from his disease to get married. He is unable to do so, but the way the writing puts him going from hero to villain to hero multiple times in the episode itself humanizes our green friend.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-awakening"&gt;
&lt;h2&gt;&lt;strong&gt;The Awakening&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the sixth episode of the fourth season of the Spider-Man 1994 television series." class="align-center" src="images/15-06-S04E06-awakening.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I should be catching crooks. For once, I'm actually having fun.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Sean Catherine Derek.&lt;/p&gt;
&lt;p&gt;As expected since Felicia Hardy is a major plot point, Morbius returns in vampire form. At this point, the show feels like it is only hitting on its greatest hits from previous seasons because of a lack of creativity. Sometimes characters that have great sendoffs before can return to enjoyable success - such as Scorpion previously - but this time with Morbius is not the same. A lot of the writing is hitting on the same beat and even our interesting one-liners are not there. The only great aspect here is once again Spider-Man struggling to move on from Mary Jane and his interactions with the Black Cat. This is the point of the show's history where things seem most off and a return to form is needed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-vampire-queen"&gt;
&lt;h2&gt;&lt;strong&gt;The Vampire Queen&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the seventh episode of the fourth season of the Spider-Man 1994 television series." class="align-center" src="images/15-07-S04E07-queen.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;What did I do wrong? Now Black Cat's left me, Felicia's gone, and Mary Jane's still missing. Well, at least there's nowhere to go from here but up.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Meg McLaughlin and John Semper.&lt;/p&gt;
&lt;p&gt;More people return, but no spark is seen. This is the theme of the season so far. &lt;strong&gt;The Vampire Queen&lt;/strong&gt; is not a bad episode, but it is one where the only piece more interesting than anything by the numbers is the Black Cat leaving and Spider-Man reaction to it. Blade's mother is a vampire that wants to create an army of vampires is by itself not an interesting story and having many characters around it just feels like having an All-Star team not facing any real foe. And, even worse, the story barely concludes, with Blade still hunting his mother at the end, but now with the help of Morbius and the Black Cat. Let's just see who else can return to light up the season.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-return-of-the-green-goblin"&gt;
&lt;h2&gt;&lt;strong&gt;The Return of the Green Goblin&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the eighth episode of the fourth season of the Spider-Man 1994 television series." class="align-center" src="images/15-08-S04E08-goblin.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Hello, young Osborn. It's about time you got up. There's lots we have to do together.&amp;quot; - Green Goblin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Mark Hoffmeier.&lt;/p&gt;
&lt;p&gt;Harry Osborn snaps and the Green Goblin is once again terrorizing our hero. This was a return to form to the series, bringing back one of the main villains and the responsible part for the main arc of the show: the disappearance of Mary Jane Watson. Also, the Punisher is back to try to find MJ. All of these explosive pieces create a really good flow for the episode, which finishes with the return of Mary Jane, a great cliffhanger since there is no explanation yet to what has happened. The show does a good job of showing Harry Osborn descending into madness, even though he was never portrayed as a serious threat, the addition of the Goblin manipulating him more than makes up for this new facet of the character. Overall, this was a long overdue great episode for the series.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-haunting-of-mary-jane-watson"&gt;
&lt;h2&gt;&lt;strong&gt;The Haunting of Mary Jane Watson&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the ninth episode of the fourth season of the Spider-Man 1994 television series." class="align-center" src="images/15-09-S04E09-haunting.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Mary Jane, all this has made me realize just how precious you are to me.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper and Virginia Roth.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Meg McLaughlin and John Semper.&lt;/p&gt;
&lt;p&gt;Fun fact: the ending of this episode is one of my earliest childhood memories. Spider-Man removing his mask to show his true identity is always a major plot point in every Spider-Man adaptation and this time is no different. I love the ending of this episode. Quick and sudden. The rest of the episode is good, with Mysterio returning and in love with an actress he tried to help recover from an accident. The plot is good and this is one of the rare instances of the show actually killing a character. Goodbye, Mysterio.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-lizard-king"&gt;
&lt;h2&gt;&lt;strong&gt;The Lizard King&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the tenth episode of the fourth season of the Spider-Man 1994 television series." class="align-center" src="images/15-10-S04E10-lizard.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Great! This is exactly why I got out of professional wrestling.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Gordon Kent.&lt;/p&gt;
&lt;p&gt;The lizards want to take over the world. It is interesting how the fourth season is full of episodes where the chemistry between Spider-Man and a partner - in this case, Mary Jane - is great, but it is inserted in a weak premise such as the lizards wanting Doctor Connors to be their king. It is interesting how Spider-Man is such a great protagonist that everyone that comes close to him has good chemistry, which helps a lot of the writing. This was not the best of efforts because of the premise, but it is still a show for children and it is expected to have installments such as this one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-prowler"&gt;
&lt;h2&gt;&lt;strong&gt;The Prowler&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the eleventh episode of the fourth season of the Spider-Man 1994 television series." class="align-center" src="images/15-11-S04E11-prowler.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Nice claws! Do you ever hang out with my friend Wolverine?&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Terrence Taylor.&lt;/p&gt;
&lt;p&gt;The season ends with a flashback episode that shows the origins of the Prowler. That certainly is a decision. It is difficult to understand the thought process behind a Season Finale that focus totally on a new character with Spider-Man being an afterthought, specially considering how Season 3 ended. The lack of a bigger arc really made this season feels like it just went through the motions and we have more questions than answers regarding Mary Jane's disappearance. Once again, the premise of the episode is weak. Even with a good execution, it just feels like the show could be more ambitious throughout the episode and the season. The Prowler being betrayed by the Kingpin was predictable and seemed like you could guess what would happen in each scene before it came on. In a recurrent theme for the season, the best bits comes from Mary Jane and Peter making their life decisions together and planning the wedding. It is still great how the show creates great partnerships for our protagonist.&lt;/p&gt;
&lt;p&gt;So, that is the end of Season 4, easily the weakest of the show so far. I felt like the show did not have a creative spark this season, relying too much into character work that was effective to keep things afloat, but no major story to really stand out. The overall feeling after each episode generally went &amp;quot;good, not great, I will forget about it soon I'm sure&amp;quot;. It is just disappointing because we already know how mature and great &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt; can be. Let's hope for a better final season.&lt;/p&gt;
&lt;/div&gt;
</content><category term="tv"></category><category term="tv"></category><category term="spider-man"></category></entry><entry><title>Spider-Man: The Animated Series (Season 03)</title><link href="https://andrefellipe.com/spider-man-season-three.html" rel="alternate"></link><published>2025-03-16T22:18:00-03:00</published><updated>2025-10-13T15:28:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2025-03-16:/spider-man-season-three.html</id><summary type="html">&lt;p class="first last"&gt;I'm back again. And I ditched Spotify. This post was written to the sound of Rita Lee's &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Fruto_Proibido"&gt;Fruto Proibido&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=JJhKbpjfXnQ"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Season three, here we go.&lt;/p&gt;
&lt;p&gt;Bob Richardson directed all episodes.&lt;/p&gt;
&lt;div class="section" id="doctor-strange"&gt;
&lt;h2&gt;&lt;strong&gt;Doctor Strange&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the first episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-01-S03E01-strange.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;You should take that act to Vegas. All he needs is a couple of tigers.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by:&lt;/strong&gt; John Semper and Mark Hoffmeier.&lt;/p&gt;
&lt;p&gt;Family is a fundamental aspect of any iteration of the Spider-Man story and the season premiere of the third season brings this to the forefront. Mary Jane is kidnapped and Spider-Man is looking for her. After a season of sci-fi horror, we encounter the magic world of Doctor Strange, Wong, Baron Mordo, and Dormammu. This was a great change of pace for the series, an episode where Spider-Man's powers were pretty uneffective in combat. Mary Jane that assumes the protagonism here, dealing with her abusive father's past and being brainwashed because of that. It was a great character arc for Mary Jane to overcome by herself the mind control and break free of her past. This allowed her to be a protagonist and not just a damsel in distress. The episode also introduces Doctor Strange in great fashion, telling us about its story with Mordo through quick and productive flashbacks. The character added a lot to the episode, with Spider-Man's reactions to the world of magic being the humorous highlight here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="make-a-wish"&gt;
&lt;h2&gt;&lt;strong&gt;Make a Wish&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the second episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-02-S03E02-madame.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I am not your enemy, Peter Parker. You are.&amp;quot; - Madame Web&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Mark Hoffmeier, Elliot S. Maggin, and Meg McLaughlin.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Make a Wish&lt;/em&gt; is a brilliant episode. It combines three of the best stories from Spider-Man into one and delivers the content in unforgettable fashion. We see Peter Parker giving up on being Spider-Man (&amp;quot;Spider-Man No More!&amp;quot;), Madame Web making her presence known and showing how important of a character it will be, the hero's origin story and a recollection of the classic &lt;a class="reference external" href="https://en.wikipedia.org/wiki/The_Kid_Who_Collects_Spider-Man"&gt;The Kid Who Collects Spider-Man&lt;/a&gt;. This combination shows a powerful story where we are reminded that Peter Parker has personal misfortunes amid his heroism. It just shows that his struggles will never be over as long as he embraces his responsibilities. The only negative here for me are the dream sequences in the origin story. I was never a fan of the dream sequences and Peter showing up as an actual spider is more gross than entertaining. But even with that, this episode still ranks highly on my list of favorite episodes of the series. The story, the chemistry with Taina, Madame Web confronting Peter, Doctor Octopus gaining the upperhand and outsmarting the hero... Everything positive meshes so well that brings the episode into a different bracket of great episodes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="attack-of-the-octobot"&gt;
&lt;h2&gt;&lt;strong&gt;Attack of the Octobot&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the third episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-03-S03E03-taina.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I do know who I am now. And I'll be ready. And it's all because of the faith of a little girl that's more of a superhero than I'll ever be.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Meg McLaughlin and John Semper.&lt;/p&gt;
&lt;p&gt;Spider-Man loses his memory and begins an uneasy alliance with Dr. Octopus before Taina saves him. While a weird story, the emotional punches that shown in the relationship between Spider-Man and Taina makes this a sweet conclusion to the arc. The episode relies on Spider-Man being confused about his identity, both because of amnesia as well as because of his previous disappointments, which led the protagonist to abandon his superhero persona. This is a deep arc that resonates with Madame Web's talks about a bigger challenge coming for our hero and those moments are the heart of the episode. My least favorite aspect are the robberies with Dr. Octopus, but it is understandable why they are needed. Our glimpses on the cab drivers community helping our hero are a delight, though, showing how much of an impact Peter Parker has on the city. This episode is a nice collection of sweet moments, ending with a darker tone that only amplifies the meaning of all that we just witnessed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="enter-the-green-goblin"&gt;
&lt;h2&gt;&lt;strong&gt;Enter the Green Goblin&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the fourth episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-04-S03E04-goblin.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Alright, Hobgo... You are not the Hobgoblin!&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Marty Isenberg and Robert N. Skir.&lt;/p&gt;
&lt;p&gt;The third season of &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt; has every episode with the prefix The Sins of the Fathers. In the Season Premiere, it was Mary Jane that had to deal with the trauma that her father caused in her life. Here, we take a closer look at Harry, which brings us the debut of the Green Goblin. It is an interesting choice to have one of the main antagonists debut almost as an one-off, but this takes nothing from the episode. The Green Goblin establishes himself as a menace out of the gate kidnapping Oscorp's Board of Directors and Mary Jane. The insanity of the character is well displayed and the action sequences with Spider-Man are well crafted. It is interesting that everything is presented as the result of an accident and Norman Osborn returns to normal at the end of the episode. The Green Goblin has much more importance in future episodes and his introduction is just a small bit of much more evil things that will come from the character.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="rocket-racer"&gt;
&lt;h2&gt;&lt;strong&gt;Rocket Racer&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the fifth episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-05-S03E05-rocket.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Yes, ladies and gentlemen, it's Robert &amp;quot;The Rocket&amp;quot; Farrell slashin' up the sidewalk! Will the curb be a problem? No way! He too stoped to be stopped! Radical aerial! The crowd goes wild! He swings the stairs like a pro! And then for the grand finale...&amp;quot; - Robert Farrell&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Doug Booth and Mark Hoffmeier.&lt;/p&gt;
&lt;p&gt;You are not your thoughts. Whenever a thought comes to your head, good or bad, you have the power to act or not upon it. Robert Farrell struggles with bad thoughts throughout this episode. If his past already condemns him as a criminal, why should he try to be a better person? Farrell almost gives in to the dark side on multiple occasions, but decides against it at the last minute. His caring love for his mother makes him to strive towards being a better person, even with hiccups. Seeing him learn that while fighting against what seems like the whole world is what makes this episode a surprise this season. Even though it puts Spider-Man and Peter as afterthoughts, Farrell more than carries his share of the bargain. The villainous Big Wheel is far from an interesting rival, but it serves its purpose here. The moral dilemma is what carries this episode. A boy - without a father, important to note - finally deciding who he is and choosing his abilities&amp;nbsp;to&amp;nbsp;do&amp;nbsp;good. This is generally considered the worst episode of the series by the fans, but I will not go that far. It could be a worse execution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="framed"&gt;
&lt;h2&gt;&lt;strong&gt;Framed&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the sixth episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-06-S03E06-framed.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;They say justice is also blind. So I like to think it gives me a leg up on the competition. Judging from what you've gotten yourself into, we're going to need every bit of help we can get.&amp;quot; - Matt Murdock&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper and Mark Hoffmeier.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Brooks Wachtel and Cynthia Harrison.&lt;/p&gt;
&lt;p&gt;Daredevil arrives!&lt;/p&gt;
&lt;p&gt;One of the best parts of the show is how Spider-Man interacts with other characters from the Marvel universe. We saw great episodes with X-Men and Blade, for instance, but Daredevil - at least for me - hits a special cord. My two favorite superheroes sharing the screen is a great recipe for a special episode. Here, Peter is accused of treason against the United States government and Matt Murdock is his lawyer since the Kingpin is involved in the scheme. This is one of the most fast-paced episodes of the show so far and packs a lot of information: besides the conspiracy plot, we also get Daredevil's origin story. It is incredible how Daredevil steals the show while he shares the spotlight with our protagonist, showing the strength of the character and its search for justice. The fact he does not know who Spider-Man is only makes things more interesting, since it puts them in a adversary position, creating great tension to end the first part of the two-parter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-man-without-fear"&gt;
&lt;h2&gt;&lt;strong&gt;The Man Without Fear&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the seventh episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-07-S03E07-fear.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Sacrifices must be made.&amp;quot; - Kingpin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper and Mark Hoffmeier.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Sean Catherine Derek.&lt;/p&gt;
&lt;p&gt;The one where Kingpin almost gets caught. One of the final moments of this episode with the fakeout where Spider-Man and Daredevil get the villain just so to be shown that was the Chameleon was incredibly well done. Well, all of &lt;strong&gt;The Man Without Fear&lt;/strong&gt; follows this pattern, concluding one of the best arcs of the series and raising the stakes: Peter Parker now knows that Wilson Fisk is not who he seems to be. This changes the dynamic of the show moving forward and the final scene puts this directly in our faces. But even before these final moments, the episode showed great moments, with articulate fight scenes and another origin story. Knowing more about the tragic backstory of the Kingpin adds another layer to the character and the quote above shows how brutal he can be, leaving his son to go to jail without reply at the end. The way this episode open space for Daredevil and the Kingpin to shine shows how mature the show's writing can get, a characteristic that distinguishes the show from other similar cartoons.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-ultimate-slayer"&gt;
&lt;h2&gt;&lt;strong&gt;The Ultimate Slayer&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the eighth episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-08-S03E08-slayer.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;But do you love him?&amp;quot; - Peter Parker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Doug Booth and Mark Hoffmeier.&lt;/p&gt;
&lt;p&gt;Kingpin tries to strike back with the creation of the Ultimate Slayer. The series returns to the theme of the season: paternal relationships. Alistair finds that Kingpin has been manipulating him and that his father is alive, prompting the newly-created robot to turn on Wilson Fisk. This part of the episode is not bad, but hits like a downgrade as the follow-up to the Spider-Man/Daredevil adventure from the last two episodes. Alistair is just not there as a character to have that kind of spotlight. On the other hand, Mary Jane and Harry Osborn getting married and her second thoughts is a much more interesting storyline. She explaining her feelings to Spider-Man while it struggles to keep his feelings to himself is the best part of the episode. The chemistry between the characters brings life to the screen by itself, with this love triangle promising much more to the rest of the season.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tombstone"&gt;
&lt;h2&gt;&lt;strong&gt;Tombstone&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the ninth episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-09-S03E09-tombstone.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Randy Robertson! What's he doing with these punks? Is crime going to infect and poison everyone I know?&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Larry Brody, Robert N. Skir, Marty Isenberg, and John Semper.&lt;/p&gt;
&lt;p&gt;Another mix of origin story alongside a side character getting the spotlight?&lt;/p&gt;
&lt;p&gt;Well, it is a formula that works, so why not repeat it? This time, we have Tombstone and Robbie as former friends, now turned enemies. The episode does a good job on stablishing the relationship between two characters that only had few opportunities of the bright lights. I liked how Tombstone was presented as a smart and manipulative villain instead of just a brute enforcer. Spider-Man playing catch-up also worked well, with our hero discovering the plan step-by-step and getting us back to the theme of the season: daddy issues! While having no season-wide impact on the storylines, &lt;strong&gt;Tombstone&lt;/strong&gt; has enough of a good story and execution to not be a forgettable affair. Bad guys have a plan to kill a story from the Daily Bugle, Spider-Man and friends interviene, Madame Web shows us the way and season 3 has another good installment. Good day at the office for the show.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="venom-returns"&gt;
&lt;h2&gt;&lt;strong&gt;Venom Returns&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the tenth episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-10-S03E10-venom.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Together again. We knew it wasn't a delusion!&amp;quot; - Venom&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Stan Berkowitz, Len Wein, and John Semper.&lt;/p&gt;
&lt;p&gt;The title says it all. Venom is back and one of the show's best character returns in explosive fashion, bringing its offspring to generate Carnage. This episode is all about setting things up for a second part, with all of the pieces being put together to clearly climax in the following episode. We see Eddie Brock develop feelings for his therapist, Cletus Kasady getting caught by Spider-Man, Dormammu and Mordo's plan being executed to bring the symbiote to Earth and Stark Enterprise playing a role with its new technology. A lot of setup that does not slow down the episode, even though it is clear that the best is yet to come. And I did not even mentioned War Machine, showing up and being a strong present right away in the series. Venom is always a hit on this show and his return could not been done in better fashion.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="carnage"&gt;
&lt;h2&gt;&lt;strong&gt;Carnage&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the eleventh episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-11-S03E11-carnage.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;That was good for an old guy.&amp;quot; - Carnage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Stan Berkowitz, James Krieg, and John Semper.&lt;/p&gt;
&lt;p&gt;Spider-Man, Venom, Carnage, Iron Man, Mordo, Dr. Kafka and Dormammu all together in a crazy fight sequence was quite a cast to blend together in this two-part episode. And I believe the end result was good to watch. While it may be a tad disappointment to have this cast revolve around Dormammu and the plot of the mystic world, the execution was still something fun. The worst part was that now Venom and Carnage were sent away at the end, meaning that appearances from them now are highly unlikely, which is a shame. Venom is one of Spider-Man's main villains and his story in this show - while always great - could have been more in terms of quantity. The whole idea of having Spider-Man and Iron Man together with Venom to fight the bad guys made it for a great dynamic, which guaranteed the success of the episode.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-spot"&gt;
&lt;h2&gt;&lt;strong&gt;The Spot&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the twelfth episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-12-S03E12-spot.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Shouln't you be the mascot at a fire station or something.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: James Krieg.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Spot&lt;/strong&gt; is without a doubt in my mind the worst episode of the series. Johnathon Ohnn is a scientist who created the time dilation accelerator portal-making machine for Tony Stark. Kingpin approaches him and, after an accident, he is transformed into the villain named Spot. He uses his abilities to teleport himself into any place to steal money for his research. Spider-Man is in the position to stop him. The premise is weak and the antagonist poses little threat to our hero, making this a chore to go through. The best part of the episode is related to Peter and Mary Jane getting back together and the tease at the end with the return of the Hobgoblin, which brings us to...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="goblin-war"&gt;
&lt;h2&gt;&lt;strong&gt;Goblin War!&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the thirteen episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-13-S03E13-war.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I must've gotten hit hard. I'm seeing double.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Mark Hoffmeier, John Semper, Robert N. Skir, and Marty Isenberg.&lt;/p&gt;
&lt;p&gt;The Goblin War! The time dilation accelerator remains an important plot point for the series and every villain wants to get its hands on the device. Spider-Man must stop all of them, but, considering that two of them are the goblins, they may as well just destroy each other by themselves to get it. Norman Osborn going insane again is always fun and his rampage against the Hobgoblin shows the hierarchy between them. Speaking of him, we learn the identity of the yellow goblin and this adds a lot to the episode. The overall idea of pitting the goblins against each other is a creative win for the series, setting up the stakes for a very interesting finale next.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="turning-point"&gt;
&lt;h2&gt;&lt;strong&gt;Turning Point&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the fourteenth episode of the third season of the Spider-Man 1994 television series." class="align-center" src="images/14-14-S03E14-turning.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Yes, yes. Take off your mask. Reveal your secret identity to your greatest enemy. At last Spider-Man's greatest secret is mine. What! The Green Goblin's greatest foe a mere boy?! Impossible! Impossible!&amp;quot; - Green Goblin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: James Krieg, John Semper, Robert N. Skir, and Marty Isenberg.&lt;/p&gt;
&lt;p&gt;The best episode of the series and one of the best adaptations of the &amp;quot;Green Goblin finds out who Spider-Man is&amp;quot; story ever created, &lt;strong&gt;Turning Point&lt;/strong&gt; is a beautiful episode of television. The Season Finale amps up the tension and creates twenty minutes of magic, with the Green Goblin getting the upper hand on our hero because of the time dilation accelerator. I love how fast this episode is and how dedicated it is to settling the score between Spider-Man and Green Goblin, even throwing both of their respective families into the mix. The final moments of the episode are riveting, with Mary Jane disappearing and a lost Peter Parker seeking help from Madame Web to no avail. Now we get to see what our hero is made of, with the first major loss for him thanks to his work almost changing him right out of the gate. Spider-Man not falling into revenge and trying to help the goblin at the end even with all of the chaos that just happened is a great exemplification of why he is a special character. All in all, the season ends with the highlight and a new mission for our protagonist: find Mary Jane Watson.&lt;/p&gt;
&lt;p&gt;This finishes the review of Season 3 of &lt;strong&gt;Spider-Man: The Animated Series&lt;/strong&gt;. The show added a lot of recurring elements that will still return, such as Madame Web and Iron Man, while bringing back some of the greatest hits in the Hobgoblin and Venom. We are introduced to Spider-Man being chosen to lead a special mission, which shows that there are higher stakes than what we are currently seeing. There were some special lows and the mystic world storylines did not do much for me, as well as the overall theme of the season, but the highs were some of the best moments of the series so far and the Season Finale is incredible. Let's see what Season 4 brings us soon!&lt;/p&gt;
&lt;/div&gt;
</content><category term="tv"></category><category term="tv"></category><category term="spider-man"></category></entry><entry><title>Spider-Man: The Animated Series (Season 02)</title><link href="https://andrefellipe.com/spider-man-season-two.html" rel="alternate"></link><published>2023-01-22T14:04:00-03:00</published><updated>2023-01-22T14:04:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2023-01-22:/spider-man-season-two.html</id><summary type="html">&lt;p class="first last"&gt;I'm back. Now with Spotify instead of Youtube. This post was written to the sound of Pearl Jam's &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Vs._(Pearl_Jam_album)"&gt;Vs.&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://open.spotify.com/track/5XtyytAig4m3HkO2XXaL9l?si=945458a504904b62"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I decided to write here again after two years without doing it. Writing is one of my favorite hobbies and writing about pop culture and random topics was something that I missed. Since my &lt;strong&gt;Spider-Man: The Animated Series (TAS)&lt;/strong&gt; &lt;a class="reference external" href="https://andrefellipe.com/spider-man-season-one.html"&gt;first review&lt;/a&gt; only covered the first season of the show, I'll be reviewing the rest in the following months.&lt;/p&gt;
&lt;p&gt;Season two, here we go.&lt;/p&gt;
&lt;p&gt;Bob Richardson directed all episodes.&lt;/p&gt;
&lt;div class="section" id="the-insidious-six"&gt;
&lt;h2&gt;&lt;strong&gt;The Insidious Six&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the first episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-01-S02E01-six.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I go to sleep one lousy day and I wake up in The Twilight Zone.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by:&lt;/strong&gt; John Semper and David Lee Miller.&lt;/p&gt;
&lt;p&gt;The second season of &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt; starts with one of the most famous Spider-Man stories: The Insidious Six. In this version, Kingpin frees Rhino, Shocker, Doctor Octopus, Mysterio, Scorpion, and Chameleon to take down our hero. Meanwhile, Spider-Man starts to lose its powers in the most unfortunate times. The episode does a good job on playing up the tension between the villains, with Doctor Octopus being reluctant to join forces with them because its own scientific adventures and the conflicts between themselves to see who gets to eliminate Spider-Man. The combination of both storylines - the supergroup villains and Spider-Man without superpowers - creates a positive dynamic, with the hero having to scape on foot and changing it to Peter Parker to avoid disaster. The usage of Aunt May to attract Peter to a trap without its powers leaves us with a tense cliffhanger for the second part. This is a strong start to the season even though it leaves use with a feeling of not much new things happening since Spider-Man is facing previous enemies that we already saw last season.&lt;/p&gt;
&lt;p&gt;New characters such as Michael Morbius and Silvermane are introduced in small bits. Considering how well the series plays with storytelling, I am certain that this is not the last time we will see them this season.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="battle-of-the-insidious-six"&gt;
&lt;h2&gt;&lt;strong&gt;Battle of the Insidious Six&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the second episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-02-S02E02-six-battle.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I'll hit them first.&amp;quot; - Kingpin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Doug Booth.&lt;/p&gt;
&lt;p&gt;The second part of the Insidious Six storylines delivers after the good setup in the first part. The most interesting dynamic here is having Spider-Man save Silvermane without knowing anything about the villain and the crossfire between the crime lords while fighting Kingpin's faction. Silvermane is no match for Kingpin when it comes to being a worthy foe for Spider-Man, but the character here serves its purpose, even though why Kingpin should be intimidated by him is not clear. The narrative plays into the &amp;quot;Spider-Man without powers is easy pickins&amp;quot; heavily. The best bits of the episode comes when Spider-Man does not have superpowers and has to rely on Peter's intelligence - and the villains' lack of it - to survive multiple onslaughts. Spider-Man outsmarting six of its main foes at the same time is too good of a premise for anyone to mess it up and the writers deliver once more in this solid start to the season. It's Spider-Man at his best and a delight for us to see.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hydro-man"&gt;
&lt;h2&gt;&lt;strong&gt;Hydro-Man&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the third episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-03-S02E03-hydro-man.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I can give you everything you've ever dreamed of.&amp;quot; - Hydro-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: James Krieg.&lt;/p&gt;
&lt;p&gt;This is the first episode where Spider-Man is only here for the action since the writers decided to give the spotlight for Mary Jane. While our hero is preoccupied with its mutation, Mary Jane receives a unexpected visit from her ex-boyfriend, Morris &amp;quot;Morrie&amp;quot; Bench, who now has superpowers and commits a series of robberies to have money and win her back. The main purpose of the episode is to give more backstory to the Mary Jane character, specially considering that we only know her through the eyes of Peter Parker. While her ex-boyfriend and father storyline is abrupt, I believe that it is because the show until now did not present any story with a similar tone as this one. &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt; focus on Peter Parker, its dramas and its villains with the rest playing it a low-key role in everything. This is the first time the show dedicates so much time to another character and this decision pays off for the future of the series, even though Hydro-Man is too stereotypical here as the bully former boyfriend to be that interesting as a foe. Spider-Man was not even needed to beat him. While not perfect, this was a valid effort to change the scenery for once, with Peter and Mary Jane finally kissing for the first time at the end.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-mutant-agenda"&gt;
&lt;h2&gt;&lt;strong&gt;The Mutant Agenda&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the fourth episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-04-S02E04-mutant.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;But I don't want to be a freak.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper, J. M. DeMatteis and Stevent Grant.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Michael Edens.&lt;/p&gt;
&lt;p&gt;Now the season raises the stakes. &lt;strong&gt;The Mutant Agenda&lt;/strong&gt; brings the X-Men and allows the show to take its most bold universe expansion so far, crossing over the mutants with a conflicted Spider-Man. While the previous episodes gave glimpses on our hero psyche dealing with its continuous mutation, the fourth episode of the season dives deep on this, with Spider-Man rebuffing the X-Men and isolating himself in searching for a cure. Its Spider-Man at its most serious ever since the Venom storyline and the writers always know how to hit the right points to increase the paranoia, showing the hero's fear of becoming something not human. The X-Men universe blends well with all of this, with the introduction of Herbert Landon, its devious plan and the return of the Hobgoblin sounding natural. The episode introduces and brings back elements of the show with ease, resulting in a crossover fight between Spider-Man and Wolverine that was brewing since the first minute. An excellent episode that pushes the season in a darker direction.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mutants-revenge"&gt;
&lt;h2&gt;&lt;strong&gt;Mutants' Revenge&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the fifth episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-05-S02E05-revenge.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I had to be reminded that when I'm in trouble I'm not alone. I need to turn to my friends.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper and Michael Edens.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Francis Moss and Ted Pedersen.&lt;/p&gt;
&lt;p&gt;Spider-Man is a lonely hero. While he has partners that can help him when a dangerous situation arise, he must hide its identity to protect the people close to him. His financial situation is not the best. He has to deal the death of Uncle Ben in his mind. He is not a part of a superhero team. Peter Parker carries the weight of the world in his shoulders and that's why we love him so much. &lt;strong&gt;Mutants' Revenge&lt;/strong&gt; reminds our hero that he can get help from his friends when the going gets tough. In the episode, Spider-Man has to make amends with the X-Men to beat Herbert Landon and the Hobgoblin and finds a possible path to cure its mutation. The way the episode starts with a fight with Wolverine and ends with a green monster while also putting the Hobgoblin in the mix is quite fun and guarantees the action throughout the twenty minutes. Also, the banter with Wolverine goes as well as one can expect. Our heros band together to beat the villain, New York survives once again. Even with this, the final moment is the show in one of its most poignant moments so far: why Spider-Man took so long to go for a friend's help? Why does he have to deal with all that is going on his mind alone? Maybe he has not. That's what this episode is all about. Let's see if it worked in the next one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="morbius"&gt;
&lt;h2&gt;&lt;strong&gt;Morbius&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the sixth episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-06-S02E06-morbius.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I need more plasma.&amp;quot; - Michael Morbius&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Brynne Stephens and Lydia Marano.&lt;/p&gt;
&lt;p&gt;Well, it did not. &lt;strong&gt;Morbius&lt;/strong&gt; becomes a vampire-like creature after messing with Spider-Man's blood and the neogenic recombinator. This leaves Spider-Man wondering why everything related to him is poison to his closest people, triggering him to drink the serum that Dr. Crawford made. Then the mutation on his body accelerates instead of curing him. Voilá, we have Peter Parker with four extra arms and my childhood was ruined as soon as I finished this episode. This is a another great installment of the season, transforming Michael Morbius from creepy guy to a tragic figure in love with Felicia Hardy. The amount of tragedies in the second year of the show keeps increasing and it's interesting how the writers can introduce a character like Morbius in a subtle way and a couple of episodes later transform him in one of the series most compelling characters. It's interesting how the good the fight scenes here are, the first with a couple of common robbers almost taking Spider-Man out in a funny bit and the one with Morbius showing our hero not even fighting him, but trying to save him. Considering where we were in the sixth episode of the light-hearted first season, we can see here how much the show has already matured.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="enter-the-punisher"&gt;
&lt;h2&gt;&lt;strong&gt;Enter the Punisher&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the seventh episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-07-S02E07-punisher.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Let's just say that you don't own the franchise on weirdness.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: John Semper and Carl Potts.&lt;/p&gt;
&lt;p&gt;The hunt is on. Punisher shows up to get Spider-Man thinking the six-arms wall crawler kidnapped Morbius. The introduction of the character does seem out of the blue at the start, but enough context is given for us to move forward. This is the episode where Spider-Man mutates into Man-Spider during its fight with Punisher as the cliffhanger. Meanwhile, Morbius is still hungry for plasma. Mary Jane is angry at Peter for not accepting a date with her. A lot of moving parts here. The episode has a great ending, but, overall, it is uneven because the Punisher sounds too much like generical tough guy here. The way the character is presented and its motivation to take out Spider-Man are not convincing, even though the action is good. The episode hits the necessary notes to advance the story and Spider-Man with six arms and as Man-Spider are nice visuals, but after the previous episodes, this was a downgrade.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="duel-of-the-hunters"&gt;
&lt;h2&gt;&lt;strong&gt;Duel of the Hunters&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the eight episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-08-S02E08-hunters.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I looked at the devil square in the eyes... And I blinked.&amp;quot; - The Punisher&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;The Man-Spider storyline reaches a conclusion in explosive fashion, with all the different players involved - Man-Spider, Morbius, Kraven, and Punisher - battling it out in some shape or form during the twenty minutes. It's interesting how the writers combine two characters that were not interesting at first - Punisher and Kraven - and create a positive dynamic with them. This happens because this episode focus on the human side of them instead of the stereotypical characterization that both of them had in previous installments of the series. This is the episode where Spider-Man has almost no dialogue because the of the Man-Spider mutation, so other characters have a better chance to shine. It's one of the best episodes of the season with a powerful message. Monsters sometimes are true victims and we should not give up on people because of our previous experiences.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="blade-the-vampire-hunter"&gt;
&lt;h2&gt;&lt;strong&gt;Blade, the Vampire Hunter&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the ninth episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-09-S02E09-blade.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Is there a vampire convention in town?&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Stephanie Mathison, Mark Hoffmeier and John Semper.&lt;/p&gt;
&lt;p&gt;Another new player shows up in New York: Blade. And he wants Morbius dead. It's interesting how the show introduces Blade in a much better way than the Punisher, giving the character a proper backstory in his first appearance and explaining his hatred for vampires. This propels a interesting episode where he wants to kill Morbius while Spider-Man wants to save him. In the meantime, Morbius learns how to love its powers and wants to transform everyone in vampires, a rehash of the Lizard story that we saw in the first episode of the series. The fight scenes and the mythology involving vampires expands even more of the already rich universe of the show. What makes this episode good, though, is one of Spider-Man recurrent themes: how he still tries to save the world around him while everyone dislikes his guts, as seen here with the police and the people of New York thinking he is the villain. This is always a good plot device and it plays well here. Another important point is how much of the season is composed of Spider-Man teaming with other people to achieve something, as seen here with Blade. Another hunt is on. This time for Morbius.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-immortal-vampire"&gt;
&lt;h2&gt;&lt;strong&gt;The Immortal Vampire&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the tenth episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-10-S02E10-vampire.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;What is running in your veins? Ice water?&amp;quot; - Terri Lee&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: John Semper and Meg McLaughlin.&lt;/p&gt;
&lt;p&gt;The Morbius storyline reaches its conclusion without much conclusion. He kidnaps Aunt May to use as leverage to get Peter to collaborate with him. This triggers an angry Spider-Man that has to rescue her while trying to save Morbius. Meanwhile, Blade and Detective Terri Lee fall in love. This is an episode where a lot of things happen, but they do not have a clear-cut sense of finality, a novel concept for the show. Morbius mutates further into a bat and flies away, Blade goes as well and Peter is relieved since Aunt May is not hurt. Also, Mary Jane finally has enough of him and chooses Harry Osborn. My biggest disappointment with this episode is that it appears to leverage the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/If_This_Be_My_Destiny...!"&gt;If This Be My Destiny...!&lt;/a&gt; moment from the comics when it puts Aunt May in danger, but does it so in a half-assed manner, with the classic panel where Spider-Man uses its willpower to scape from danger being used in a Morbius confrontation with almost no dramatic effect. Considering that it is one of the comics most idolized arcs, being used here in such an unconvincing way is what keeps this episode from being great, even though the conflict between Blade, Spider-Man and Morbius creates great action scenes, with Peter desperate to keep the vampire away from his loved ones. Putting Peter's friends and family in the heat of Spider-Man's battles is one of Spider-Man best storytelling devices and &lt;strong&gt;The Immortal Vampire&lt;/strong&gt; uses it for a good effect.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tablet-of-time"&gt;
&lt;h2&gt;&lt;strong&gt;Tablet of Time&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the eleventh episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-11-S02E11-tablet.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Speak for yourself, bugboy. I don't breathe.&amp;quot; - Tombstone&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Mark Hoffmeier, Stan Berkowitz and John Semper.&lt;/p&gt;
&lt;p&gt;The one where everybody is kidnapped. The crime lords showdown is back on the spotlight in &lt;strong&gt;Tablet of Time&lt;/strong&gt;. Kingpin and Silvermane are after an ancient artifact known as the Tablet of Time, which has the special power of restore the youth. Dr. Connors and Spider-Man are caught in the middle of this and we have new super robots and new villains - Tombstone and Alisa Silver - to deal with. This episode does a lot of preparation for the final episodes of the season, which the Tablet of Time heavily influences, so the most important parts here are the small character studies that we get a glimpse of. Kingpin has troubles in his marriage since his wife is no longer interested in his line of work. Peter tries to get over Mary Jane and Harry Osborn together and falls right into Alisa Silver's trap. Dr. Connor has to hide away the Lizard once again. While not a groundbreaking or memorable effort, the episode does an appropriate job to setup what comes next on the show.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ravages-of-time"&gt;
&lt;h2&gt;&lt;strong&gt;Ravages of Time&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the twelfth episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-12-S02E12-ravages.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I want to see who is behind the mask.&amp;quot; - Silvermane&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Mark Hoffmeier, Stan Berkowitz and John Semper.&lt;/p&gt;
&lt;p&gt;Now that's a monkey's paw. Silvermane reaches its goal for youth, but too much of it came through. The best part of &lt;strong&gt;Ravages of Time&lt;/strong&gt; is seeing Silvermane as a baby after all of the hoops to get the Tablet of Time and how Kingpin disposes of it as soon as it acquires for being a reminder of his marriage's problems. The overall sense of waste of time from both villains after the endeavor has a weird humor to it. There were chases, hostage exchanges, scientific experiments and a lot of fighting and nothing was accomplished. Well, at least not for the bad guys, but surprisingly we finished an episode where Spider-Man ends in a place better than where he was at the start, with Dr. Connors being better after receiving the rays from the Tablet of Time. Our hero, though, is still without a cure for its mutation, but at least seeing his friend not suffering is a bright spot in the gloomy atmosphere of the season. This is the weakest storyline of the season - Hydron-Man was a self-contained episode - but we are still advancing towards a finale where Spider-Man still has its unresolved mutation to solve it. While it seems like we are running out of gas in the story and the writers are covering this with crossovers and new characters for the sake of it, the show has earned enough credit for us to have better hope for the final two episodes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="shriek-of-the-vulture"&gt;
&lt;h2&gt;&lt;strong&gt;Shriek of the Vulture&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the thirteenth episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-13-S02E13-vulture.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;She definitely likes you, pal, so she can't be that smart.&amp;quot; - Peter Parker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: John Semper, Gilles Wheeler and Eyelyn A. R. Gabai.&lt;/p&gt;
&lt;p&gt;For the surprise of all, Flash Thompson saves Spider-Man from the Vulture. This episode is an interesting introduction to a member of the rogues gallery that was not yet introduced. The Vulture shares in part the motivations of Silvermane in the previous episodes: have more youth and take out Norman Osborn for the attempted takeover of his company. While the fights and the cliffhanger are fun, the most interesting aspect of the episode is Flash officially going from a bully to a all-american-kind-of-a-buffoon type of hero. His pairing with Debra Whitman works well and the romance between them plays out in natural fashion for a couple of characters that we are not that close in the show. The season goes for its season finale with less tension and darkness than its middle part. Considering that we saw Man-Spider this season, Peter Parker getting old from the hands of the Vulture lacks the drama of the previous storyline. This final stretch of the show's second year is not bad by any means, it just suffers from having to follow-up a strong beginning and middle part of the season.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-final-nightmare"&gt;
&lt;h2&gt;&lt;strong&gt;The Final Nightmare&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the fourteenth episode of the second season of the Spider-Man 1994 television series." class="align-center" src="images/13-14-S02E14-nightmare.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I guess we old folks have to stick together.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I had no idea you were a senior citizen.&amp;quot; - Old Lady&lt;/em&gt;&lt;/p&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;It's the job. It ages you.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: John Semper and Sandy Fries.&lt;/p&gt;
&lt;p&gt;The neogenic nightmare is over. The second season ends in a high note with the Vulture absorbing Spider-Man's mutation and our hero finally being cured after Dr. Connors saves him. But, unfortunately, nothing really good happens with Peter Parker without bad news following it up. Mary Jane mysteriously disappears and this is how the second season ends. Peter can't catch a break. From this last bunch of episodes, this is the best one. Ironically, it's another instance of where the writers combine different villains and characters in a confrontation - Scorpion, Vulture, Lizard and Spider-Man - for multiple reasons, but this one feels more natural thanks to each character having a motivation to use the neogenic recombinator. The irony of the Vulture having the Man-Spider mutation is an interesting twist and another fun monkey's paw moment from the show, but the adventures of an old Peter Parker is my favorite part of the season finale, specially when he has to confront a couple of burglars in an alley. It's a fun episode with a cliffhanger ending that already causes interest for the third season.&lt;/p&gt;
&lt;p&gt;That's it. It's been a pleasure to cover the second season of &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt;. The season is darker, works in a much more serious tone and shows a series more comfortable with its storytelling style. The first half is one of the show's best runs and while the final episodes do not have the same excitement, they are solid enough to make this a great season.&lt;/p&gt;
&lt;p&gt;Now, let's go on to season three.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;Thank you for giving me back my life. What a beautiful day this is gonna be! I feel lucky to be alive. And lucky of being who I am: Spider-Man.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="tv"></category><category term="tv"></category><category term="spider-man"></category></entry><entry><title>Spider-Man: The Animated Series (Season 01)</title><link href="https://andrefellipe.com/spider-man-season-one.html" rel="alternate"></link><published>2021-01-30T22:34:00-03:00</published><updated>2021-01-30T22:34:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2021-01-30:/spider-man-season-one.html</id><summary type="html">&lt;p class="first last"&gt;Spider-Man is my favorite superhero and the 1994 TV series was my introduction to the character as a young child. I decided to rewatch the first season and this is a short review of all episodes. This post was written to the sound of Weezer's &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Weezer_(Blue_Album)"&gt;Blue Album&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=sRfu94lOEPo"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;It's said that your personal experiences make up a small part of what's happened in the world but maybe 80% of how you think the world works*. &lt;strong&gt;Spider-Man: The Animated Series (TAS)&lt;/strong&gt; was the first television show that I religiously followed. I don't even remember my age at the time, but it used to be shown on network TV during weekdays in the morning and I anxiously waited for every episode. Thanks to this series and the fact that I do not follow comic books, my idea of Spider-Man is the version of the story presented here. I'm really excited to write these small bits here, so let's get started...&lt;/p&gt;
&lt;p&gt;&lt;em&gt;*This also explains why I prefer the movie version that Sam Raimi did instead of the more recent installments, with the exception of the terrible Spider-Man 3, since they are more aligned with this version. Mary Jane Watson &amp;gt;&amp;gt;&amp;gt; Gwen Stacy.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Bob Richardson directed all episodes.&lt;/p&gt;
&lt;div class="section" id="night-of-the-lizard"&gt;
&lt;h2&gt;&lt;strong&gt;Night of the Lizard&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the first episode of the Spider-Man 1994 television series." class="align-center" src="images/12-01-S01E01-lizard.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;What a slimy mess. Why can't I be one of those galaxy hopping superheroes? Why do I end up in the sewers? You don't find the Fantastic Four in the sewer. Or the Avengers. Never do you find the Avengers in the sewers. Or the Defenders. Well, maybe the Hulk.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by:&lt;/strong&gt; Gerry Conway, Stan Berkowitz and John Semper.&lt;/p&gt;
&lt;p&gt;There's no origin story here. Spider-Man is thrown right into the action to deal with a gigantic reptile that is attacking people in the sewers of New York City. He learns that the creature is his professor and friend Dr. Curt Connors, that used the Neogenic Recombinator to grow back his arm before the equipment turned him on the Lizard.&lt;/p&gt;
&lt;p&gt;The pilot is a solid episode. All of the usual suspects, J. Jonah Jameson, Aunt May and Eddie Brock are here and plot elements that will become major parts of the story - like the previously mentioned Neogenic Recombinator - are introduced. This is a good start that shows the difficult financial situation of the Parker family, the bad public perception that Spider-Man has thanks to Jameson and how it's difficult for Peter to balance his life with his responsibilities as a superhero. Everything is packed in twenty minutes on small doses to establish the characters and humor plays a big part, like with the quote above when Spider-Man is in the sewer to fight the Lizard.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-spider-slayer"&gt;
&lt;h2&gt;&lt;strong&gt;The Spider Slayer&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the second episode of the Spider-Man 1994 television series." class="align-center" src="images/12-02-S01E02-slayer.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I don't stick to walls, see? I can't swing on webs, either. I get airsick.&amp;quot; - Flash Thompson&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Stan Berkowitz.&lt;/p&gt;
&lt;p&gt;Considering the target audience, &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt; goes deep in terms of serialized storytelling, small bits of information that don't seem important eventually comes back and the plots get more and more interesting with time. The multi-part episodes are important in this context because it allows the narrative and the characters to be fleshed out in the appropriate pace. This is the first part of the first one that the series made. Since we're early in the series run, we're being slowly introduced to the big players and it's interesting to see how naturally Spider-Man makes enemies. This episode introduces Kingpin, Norman Osborn, Spencer Smythe and Alistair Smythe and their plan to take out the webslinger using robots while Eddie Brock continues his quest for revenge. Also, Felicia Hardy and Flash Tompson show up in a weak subplot where the football player dresses as Spider-Man to scare Peter in Felicia's party.&lt;/p&gt;
&lt;p&gt;The episode tries to placate too many moving pieces at the same time. It does not hit home runs in all of them and the Black Widow is never showed as a real threat to Spider-Man. A forgettable effort.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="return-of-the-spider-slayers"&gt;
&lt;h2&gt;&lt;strong&gt;Return of the Spider Slayers&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the third episode of the Spider-Man 1994 television series." class="align-center" src="images/12-03-S01E03-return.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Face it, Tiger. You just hit the jackpot.&amp;quot; - Mary Jane Watson&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Mark Hoffmeier.&lt;/p&gt;
&lt;p&gt;This was a weird story to tell in a two-part episode. While the previous episode was not a hit, the story of Alistair Smythe aligning himself with the Kingpin is good enough to warrant a continuation, but not exactly right after his father is killed. It would made more sense if the writers did the follow-up later instead of here because this episode was very similar to the first part. Smythe sends robots to attack Spider-Man and everyone involved in &lt;strong&gt;The Spider Slayer&lt;/strong&gt;. Rinse and repeat. There's also a bomb that will detonate in one hour attached to our hero for whatever reason.&lt;/p&gt;
&lt;p&gt;Weirdly, the best moment of the series so far comes here: the first appearance of Mary Jane Watson. Just like the comics, she appears at the end to utter her famous line. I guess Peter will change his opinion of blind dates now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="doctor-octopus-armed-and-dangerous"&gt;
&lt;h2&gt;&lt;strong&gt;Doctor Octopus: Armed and Dangerous&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the fourth episode of the Spider-Man 1994 television series." class="align-center" src="images/12-04-S01E04-octopus.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Reminds me of Flash Thompson, all hands.&amp;quot; - Felicia Hardy&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper and Brooks Wachtel.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Brooks Wachtel and Cynthia Harrison.&lt;/p&gt;
&lt;p&gt;The best episode of the season so far and we're already seeing the slow introductions to the characters return dividends. Dr. Octopus debuts and his origin story is well presented with the use of flashbacks. The best villains are normally the ones that truly believe that what they're doing is for the greater good and Dr. Octopus is positioned as such here, obsessed with his experiment and kidnapping Felicia Hardy to get revenge on the Hardy family for refusing to support his work and to obtain money to fund it.&lt;/p&gt;
&lt;p&gt;The script meshes well the protagonist's personal relationship with Felicia alongside his superhero work. Using Peter Parker as the person that delivers the ransom money is a good idea that comes off naturally on screen and the fight scenes between Spider-Man and Dr. Octopus are crafted in a convincing fashion, playing it off the fact that it's two highly-intelligent individuals using their brains to get one over the other. All of the characters are used correctly - even J. Jonah Jameson getting kidnapped because of his mouth makes total sense - and adds up to great twenty minutes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-menace-of-mysterio"&gt;
&lt;h2&gt;&lt;strong&gt;The Menace of Mysterio&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the fifth episode of the Spider-Man 1994 television series." class="align-center" src="images/12-05-S01E05-mysterio.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I had the power and I didn't use it. I lost my uncle because I ignored my responsibilities. He always used to tell me: with great power comes great responsibility. If I stop being Spider-Man, who else will suffer?&amp;quot; - Peter Parker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: John Semper, Marv Wolfman and Stan Berkowitz.&lt;/p&gt;
&lt;p&gt;Mysterio shows up in a plot to frame Spider-Man for a series of robberies while positioning himself as a hero with the help of J. Jonah Jameson. The webslinger has to redeem himself and Peter Parker questions if it's worth it to be Spider-Man since in the whole situation he forgets about his date with Mary Jane.&lt;/p&gt;
&lt;p&gt;In this episode we also see one of the main components of the Spider-Man story being brought up for the first time: the murder of Uncle Ben and his importance to the character of Peter Parker. The way the flashbacks and the Mysterio story connect is well done and we can really feel the doubts that Peter has. Is it worthy to sacrifice so much and get so little in return? Maybe not, but running away from the responsibility is a worst option. This dilemma drives the episode and continues the good streak for the series.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-sting-of-the-scorpion"&gt;
&lt;h2&gt;&lt;strong&gt;The Sting of the Scorpion&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the sixth episode of the Spider-Man 1994 television series." class="align-center" src="images/12-06-S01E06-scorpion.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I knew I should have never left Brooklyn.&amp;quot; - Scorpion&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: John Semper, Marv Wolfman and Stan Berkowitz.&lt;/p&gt;
&lt;p&gt;J. Jonah Jameson hires a low-level crook named Marc Gargan with self-steem problems to follow Peter Parker and find out about his relationship with Spider-Man. After his plan fails, he talks to Professor Farley Stillwell to use the Neogenic Recombinator to transform Gargan in a &amp;quot;hero&amp;quot; to take out Spider-Man. Scorpion is born and goes on a rampage all over New York City.&lt;/p&gt;
&lt;p&gt;For a cartoon that has only twenty minutes to tell a story, &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt; puts a lot of effort in providing motivations and personalities to every character to makes us sympathize with them. We learn why Jameson hates our hero thanks to a mob hitman with a mask killing his fianceé and pushes him into a more gray area than the position as the series' main villain that he was put previosuly. Even Gargan has certain deep traits for such a simple character, his insecurities associated with the radiation from the Neogenic Recombinator drive him insane and character details like this gives an important spotlight to the supporting players. The episode is a good showing and important because shows that the writers are comfortable and capable to create an universe where there are people outside of Peter that are relevant.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="kraven-the-hunter"&gt;
&lt;h2&gt;&lt;strong&gt;Kraven the Hunter&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the seventh episode of the Spider-Man 1994 television series." class="align-center" src="images/12-07-S01E07-kraven.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Welcome to my jungle.&amp;quot; - Kraven&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper and Jan Strnad.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Mark Hoffmeier.&lt;/p&gt;
&lt;p&gt;One thing that &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt; did so well in such short amount of time was establish the characters in a convincing manner... until this episode. Spider-Man takes a backseat to a boring love story that serves as the introduction of Kraven the Hunter, a superhuman that was saved by Dr. Mariah Crawford using a drug called the Calypso Serum. He attacks her and kidnaps Robbie.&lt;/p&gt;
&lt;p&gt;All of these three characters are not that well positioned in the series' universe to warrant that much time to their story and Spider-Man is a spectator to all of the action. Sure, he fights crocodiles, but he doesn't drive the narrative. And thanks to the amount of time devoted to the kidnap and the love affair, Peter's subplot where he has to ignore Mary Jane and Felicia Hardy just sounds thrown together at the last minute.&lt;/p&gt;
&lt;p&gt;Basically, a safari with a corny villain that ends with Kraven getting an antidote. The weakest installment of the season.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-alien-costume-part-1"&gt;
&lt;h2&gt;&lt;strong&gt;The Alien Costume, Part 1&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the eight episode of the Spider-Man 1994 television series." class="align-center" src="images/12-08-S01E08-alien-1.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Parker, how on Earth did you get in the middle of Manhattan, hanging upside down in a costume you've never seen before?&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: Avi Arad and Stan Lee.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Len Wein, Meg McLaughlin, Stan Berkowitz and John Semper.&lt;/p&gt;
&lt;p&gt;The three-part episode that brings this series to another level starts here. The Symbiote - and you know who - is one of the most iconic villains of Spider-Man and the narrative here does justice to the character. The best part of the script is that all of the elements that served as pillars of the series so far - Peter's frustation with the lack of recognition he has, J. Jonah Jameson positioning Spider-Man as public enemy number one, Kingpin doing shady deals and Eddie Brock getting screwed - all come together. Also, we get Rhino smashing things and stealing the Promethium X for Kingpin.&lt;/p&gt;
&lt;p&gt;This first part has an accelerated pace and gives the necessary substance to each character. It's interesting that it doesn't have subplots or other stories and every major player is gunning for something different inside the same plot.&lt;/p&gt;
&lt;p&gt;A great start to this multi-part episode and Peter slow descent into madness - almost killing Rhino - thanks to the Symbiote only gets weirder next.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-alien-costume-part-2"&gt;
&lt;h2&gt;&lt;strong&gt;The Alien Costume, Part 2&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the ninth episode of the Spider-Man 1994 television series." class="align-center" src="images/12-09-S01E09-alien-2.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;You're suppose to be the good guy. You can't do this!&amp;quot; - Shocker&lt;/em&gt;&lt;/p&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Why not? I have the power.&amp;quot; - Spider-Man&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper and Brynne Stephens.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Brynne Stephens.&lt;/p&gt;
&lt;p&gt;Peter's new suit makes him more and more violent while he has to deal with Jameson's bounty. After he learns more about the nature of the suit, he realizes that keeping it may not be the best course of action for his well-being.&lt;/p&gt;
&lt;p&gt;While the first part ends with Peter having second thoughts about hurting Rhino, this one ends with the Symbiote assuming the control and almost killing Shocker, our newest addition to the rogues' gallery. Thank goodness, our hero recovers his conscience and reminds himself of the wise words of Uncle Ben. The seamless transformation to insanity of Spider-Man is the main point here and the fits of rage that he throws - including a corny one while chasing Shocker in a church - provides us with great action.&lt;/p&gt;
&lt;p&gt;Meanwhile, Jameson has to eat his words and get Spider-Man's help to deal with the kidnap of his son - come to think of it, kidnappings are a common thing in this show - and the writers once again throw him in this uncomfortable position of needing aid.&lt;/p&gt;
&lt;p&gt;In his most difficult test so far, Peter has to battle to remember that he's a good person and this story arc continues to prove his fame as the best of the first season.&lt;/p&gt;
&lt;p&gt;Oh, and, once again, Eddie Brock gets the short end of the stick. But now he has a new friend to cope with his bad fortunes...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-alien-costume-part-3"&gt;
&lt;h2&gt;&lt;strong&gt;The Alien Costume, Part 3&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the tenth episode of the Spider-Man 1994 television series." class="align-center" src="images/12-10-S01E10-alien-3.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;You'll see us everywhere, even in your nightmares.&amp;quot; - Venom&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Story by&lt;/strong&gt;: John Semper and Mark Hoffmeier.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Teleplay by&lt;/strong&gt;: Mark Hoffmeier.&lt;/p&gt;
&lt;p&gt;The best episode of the first season and the end of a story arc that proves that &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt; is a very mature show for a cartoon. Eddie Brock finally has the means to get revenge on Spider-Man throught the Symbiote. Venom appears and torments Peter's loved ones. The script does a great job at raising the stakes of the confrontation, as Venom knows the webhead's identity and is so consumed by hate that he doesn't think twice before using this knowledge to make Peter suffer. We go through twenty minutes where the villain doesn't stop messing with Peter's head and body, putting the hero in a position where he's outthought and outfought the whole time, even having his mask removed, an opportunity that J. Jonah James can't capitalize on. We jump from one scene to next expecting a breather or a transition to a different scenario, but, nope, there's Venom on top again beating up Spider-Man.&lt;/p&gt;
&lt;p&gt;This story arc is impressive because Peter gets to show a lot of different emotions in each episode, from overconfidence to helplessness. Here, it's palpable the fear that he has that Venom can harm Mary Jane and Aunt May and this has him on the brink before being able to use his intelligence to defeat the enemy. All of this is served with great action sequences - the final fight goes on in more than three locations - and a nice ending with him finally having a moment with Mary Jane while they look at the night sky.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-hobgoblin-part-1"&gt;
&lt;h2&gt;&lt;strong&gt;The Hobgoblin, Part 1&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the eleventh episode of the Spider-Man 1994 television series." class="align-center" src="images/12-11-S01E11-hobgoblin-1.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I want the Kingpin.&amp;quot; - Hobgoblin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Larry Brody and John Semper.&lt;/p&gt;
&lt;p&gt;Introducing the Hobgoblin here is the most questionable decision of the first season considering that it's a completely different approach than the comics. In this two-part episode, that decision may alienate some fans, but it doesn't prevent the story from being fun. The villain appears in a random fashion, but the narrative of a three-way dispute between the Kingpin, Norman Osborn and the Hobgoblin with Spider-Man - and Peter - getting caught in the middle provides us with an episode full of action and double crosses.&lt;/p&gt;
&lt;p&gt;This is a weird episode because it doesn't care much about providing a backstory to the main villain, trusting that the audience will only recognize the Hobgobling as a power hungry lunatic. The script does a good job at establishing him as a smart figure that puts Osborn and Kingpin against each other with the aim of being the leader of all criminals. The cliffhanger is not the most exciting because we know that the Hobgobling doesn't kill Spider-Man with two bombs and this drags the episode down, but at least we get a closer look at Harry Osborn - that now shares an apartment with Peter - and Kingpin - that uses philanthropy to divert attention from his criminal enterprise.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-hobgoblin-part-2"&gt;
&lt;h2&gt;&lt;strong&gt;The Hobgoblin, Part 2&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the twelfth episode of the Spider-Man 1994 television series." class="align-center" src="images/12-12-S01E12-hobgoblin-2.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;This town has a new Kingpin, Osborn. And it's me!&amp;quot; - Hobgoblin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: Stan Berkowitz.&lt;/p&gt;
&lt;p&gt;The enemy of my enemy is my friend is the logic of here. The Hobgoblin takes over Kingpin's criminal enterprise and pays the price soon after. Following the uneasy alliances of the last episode, everything is shuffled here: now Osborn and Kingpin have to take out the Hobgoblin. They use Spider-Man to do their bidding and the irony of the webhead helping them without knowing that Kingpin is pulling his strings is an awesome achievement of the script.&lt;/p&gt;
&lt;p&gt;While nothing is as good as &lt;strong&gt;The Alien Costume&lt;/strong&gt; arc, the Hobgoblin's arc has its strong moments, specially the creative fight scene where Spider-Man doesn't have buildings to swing his web to run away from the villain's attacks, having to use his feet and quick thinking.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="day-of-the-chameleon"&gt;
&lt;h2&gt;&lt;strong&gt;Day of the Chameleon&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the thirteenth episode of the Spider-Man 1994 television series." class="align-center" src="images/12-13-S01E13-chameleon.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I took a gamble that Peter Parker was the luckiest man on Earth.&amp;quot; - Chameleon&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Written by&lt;/strong&gt;: John Semper.&lt;/p&gt;
&lt;p&gt;The season finale brings Chameleon, an international spy, to ruin a peace proposal. SHIELD enlists J. Jonah Jameson to catch him and avoid the murder of two diplomats while Spider-Man sticks his nose in the middle of everything because that's what he does.&lt;/p&gt;
&lt;p&gt;Chameleon is a good villain because while he is not presented as a mortal threat to our hero, his gimmick is at least the source of funny material. The rule of this episode is to finish the season in a high note and even when Peter gets caught in a bad situation - Chameleon kisses Mary Jane while disguising as him - the purpose is only comedy. The script is smart and doesn't do a banana peel ending to the story since Chameleon actually gets caught because of two mistakes that he could not avoid.&lt;/p&gt;
&lt;p&gt;A smart bad guy, an intelligent good guy, Nick Fury congratulating him and Peter in hot water with Mary Jane... that's quite a good day for our friendly neighborhood Spider-Man.&lt;/p&gt;
&lt;p&gt;And that's it.&lt;/p&gt;
&lt;p&gt;This is a light-hearted first season compared to the more serious tone of the rest of the series. &lt;strong&gt;Spider-Man: TAS&lt;/strong&gt; barely missed a step and delivered the goods, specially with the Venom arc. The rogues' gallery was well introduced and the Hobgoblin, Dr. Octopus and Scorpion had great appearances. Kraven and the Spider Slayers were lowlights of the season, but the overall experience was a great reimagination of this brilliant universe.&lt;/p&gt;
&lt;/div&gt;
</content><category term="tv"></category><category term="tv"></category><category term="spider-man"></category></entry><entry><title>The Tech U Movies</title><link href="https://andrefellipe.com/tech-u-movies.html" rel="alternate"></link><published>2020-08-09T06:58:00-03:00</published><updated>2021-01-23T23:36:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2020-08-09:/tech-u-movies.html</id><summary type="html">&lt;p class="first last"&gt;The first phase of the AWS Tech U Program is over. I saw 137 movies during the last 5 months and let's talk about 10 of them here. This post was written to the sound of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Paramore_(album)"&gt;Paramore's&lt;/a&gt; self-titled album. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=OblL026SvD4"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This text is not about the &lt;strong&gt;best&lt;/strong&gt; movies that I watched during this period. It's about movies that I thought that, for whatever reason, I should write about. All of them are interesting and I even rewatched a few before publishing this post, so you should absolutely check them out in case you are looking for recommendations.&lt;/p&gt;
&lt;div class="section" id="o-caso-dos-irmaos-naves-1967"&gt;
&lt;h2&gt;&lt;strong&gt;O Caso dos Irmãos Naves (1967)&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the movie O Caso dos Irmãos Naves, made in 1967" class="align-center" src="images/11-01-naves.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Here.&amp;quot; - Multiple officers&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Director:&lt;/strong&gt; Luís Sérgio Person.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The plot:&lt;/strong&gt; A man disappear with a large sum of money and the investigation leads to one of the biggest mistakes in the history of Brazil's judiciary system. Two brothers are arrested and tortured to obtain a confession even though they did not commit the crime.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why is it here:&lt;/strong&gt; This is of the most gut-wrenching brazilian movies ever made. The torture scenes are intense and the police's lack of moral character puts the viewer in a uncomfortable position throughout 90 minutes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The scene:&lt;/strong&gt; The police forces one of the Naves brothers to search for the stolen money in an empty field. They know that there's no money to be found there and still torture an innocent man only to play with his mind.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="twilight-zone-the-movie-1983"&gt;
&lt;h2&gt;&lt;strong&gt;Twilight Zone: The Movie (1983)&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the movie Twilight Zone, made in 1983" class="align-center" src="images/11-02-twilight.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Do you want to see something really scary?&amp;quot; - The Passenger&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Director:&lt;/strong&gt; John Landis, Steven Spielberg, Joe Dante and George Miller.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The plot:&lt;/strong&gt; A remake of three episodes of the original Twilight Zone.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why is it here:&lt;/strong&gt; The whole movie is uneven at best, but everything starts with a bang. The opening scene is a beautiful combination of humor, horror and homage to the original TV series. In the category &amp;quot;Movies that start brilliantly only to have not-so-great follow-ups&amp;quot;, this one only loses to &lt;a class="reference external" href="https://www.youtube.com/watch?v=HVy-TSs7Gio"&gt;When a Stranger Calls&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The scene:&lt;/strong&gt; The opening scene where Albert Brooks and Dan Aykroyd discuss the most scary episodes of The Twilight Zone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="spoorloos-1988"&gt;
&lt;h2&gt;&lt;strong&gt;Spoorloos (1988)&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the movie Spoorloos, made in 1988" class="align-center" src="images/11-03-vanishing.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;But I want you to know, for me killing is not the worst thing.&amp;quot; - Raymond Lemorne&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Director:&lt;/strong&gt; George Sluizer.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The plot:&lt;/strong&gt; A couple is travelling on holiday in France and while they stop to refuel, the girl enters to buy drinks and is never seen again. Her boyfriend enters a multi-year saga to find out what happened.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why is it here:&lt;/strong&gt; It has one of the most acclaimed endings in cinema history, but the movie as a whole offers much more. Spoorloos is a dense study about obsession and how humanity's dark side develops over time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The scene:&lt;/strong&gt; The ending sequence where we discover what happened.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-quiet-place-2018"&gt;
&lt;h2&gt;&lt;strong&gt;A Quiet Place (2018)&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the movie A Quiet Place, made in 2018" class="align-center" src="images/11-04-quiet.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I love you. I have always loved you.&amp;quot; - Lee Abbott&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Director:&lt;/strong&gt; John Krasinski.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The plot:&lt;/strong&gt; A family struggles to survive in a post-apocalyptic world where humanity must scape from monsters that are attracted to sound.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why is it here:&lt;/strong&gt; Because a well-made movie where the characters are not allowed to speak is an impressive feat. A Quiet Place creates incredible tension with the use of silence and shows that Krasinski is quite a skilled director, able to convey a thriller where the course of action for the characters is to avoid confrontations with the monsters instead of battling them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The scene:&lt;/strong&gt; The sacrifice scene.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hitman-hart-wrestling-with-shadows-1998"&gt;
&lt;h2&gt;&lt;strong&gt;Hitman Hart: Wrestling with Shadows (1998)&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the movie Hitman Hart: Wrestling with Shadows, made in 1998" class="align-center" src="images/11-05-hitman.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Bret screwed Bret. I have no sympathy whatsoever for Bret.&amp;quot; - Vince McMahon&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Director:&lt;/strong&gt; Paul Jay.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The plot:&lt;/strong&gt; A documentary following professional wrestler Bret &amp;quot;The Hitman&amp;quot; Hart during his final months in the World Wrestling Federation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why is it here:&lt;/strong&gt; I've watched a ton of documentaries in the timeframe described above and chose two for this list. This one is here for a couple of reasons: it reminded me of 2008, when professional wrestling started to be broadcasted on network TV here in Brazil and I watched with my uncle, and also because it's a really underrated gem. This is a rise and fall story of a man that took pride in his profession, saw his boss as a father figure and was unable to adapt to his audience's newly-acquired preference in anti-heroes as protagonists instead of goody two-shoes personas. All of this and a company in financial peril culminated in a depressing night in Montreal.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The scene:&lt;/strong&gt; After the movie's defining moment, the mind responsible for everything explains his actions on live television.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="drag-me-to-hell-2009"&gt;
&lt;h2&gt;&lt;strong&gt;Drag Me to Hell (2009)&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the movie Drag Me to Hell, made in 2009" class="align-center" src="images/11-06-hell.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I did what you said! I killed a little kitty!&amp;quot; - Christine Brown&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Director:&lt;/strong&gt; Sam Raimi.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The plot:&lt;/strong&gt; A loan officer chooses not to give an extension to the mortgage of an old lady. The lady in question is a gypsy woman with a blind eye and retaliates with a curse that makes the next few days of the protagonist's life a living hell.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why is it here:&lt;/strong&gt; Sam Raimi directed two of my favorite movie series, the Tobey Maguire Spider-Man movies (I know the third one is terrible) and Evil Dead, but those are the only movies of his that I watched before looking into Drag Me to Hell. This movie is a campy ride with some funny bits and weird horror sequences. The textbook definition of good, but not much more.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The scene:&lt;/strong&gt; The fight scene in the garage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="el-secreto-de-sus-ojos-2009"&gt;
&lt;h2&gt;&lt;strong&gt;El Secreto de sus Ojos (2009)&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the movie El Secreto de sus Ojos, made in 2009" class="align-center" src="images/11-07-eyes.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;A guy can change anything. His face, his home, his family, his girlfriend, his religion, his God. But there's one thing he can't change. He can't change his passion.&amp;quot; - Pablo Sandoval&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Director:&lt;/strong&gt; Juan José Campanella.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The plot:&lt;/strong&gt; A woman is raped and murdered and the characters involved in the investigation are followed through 25 years in a nonlinear narrative.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why is it here:&lt;/strong&gt; A modern classic from Argentina, El Secreto de sus Ojos deals with the theme of passion, showing its good and bad side in a beautiful love story and a twisted murder. Everybody in this movie is hiding something and Juan José Campanella shines in the direction with the lovely use of close-ups to bring the characters' eyes into the forefront. Since the eyes are the windows to the soul, nothing here stays hidden for too long and the result is a memorable journey through the years.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The scene:&lt;/strong&gt; The chase inside &lt;em&gt;El Cilindro&lt;/em&gt;. God bless the souls that filmed this sequence, an amazing achievement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="enron-the-smartest-guys-in-the-room-2005"&gt;
&lt;h2&gt;&lt;strong&gt;Enron: The Smartest Guys in the Room (2005)&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the movie Enron: The Smartest Guys in the Room, made in 2005" class="align-center" src="images/11-08-enron.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;We are the good guys. We are on the side of angels.&amp;quot; - Jeffrey Skilling&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Director:&lt;/strong&gt; Alex Gibney.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The plot:&lt;/strong&gt; A documentary about the fall of the Enron Corporation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why is it here:&lt;/strong&gt; After COVID-19 and the subprime crisis, it seems that the Enron scandal is something from another era, but it has been less than 20 years since what appeared to be an energy empire crumbled down in less than a month. This documentary really knows which buttons to push to make the audience angry with the multiple crimes committed. The way that Alex Gibney peels the onion and makes you angrier and angrier with the actions of Enron makes this a must-watch documentary.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The scene:&lt;/strong&gt; A lineman from a power company that Enron bought learns that his retirement fund went from $250,000 to $1,000. He'll never retire.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="spirited-away-2001"&gt;
&lt;h2&gt;&lt;strong&gt;Spirited Away (2001)&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the movie Spirited Away, made in 2001" class="align-center" src="images/11-09-spirited.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;I promise I'll get you out of here, just don't get any fatter or they'll eat you.&amp;quot; - Chihiro Ogino&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Director:&lt;/strong&gt; Hayao Miyazaki.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The plot:&lt;/strong&gt; A 10-year-old girl enters the world of spirits after her parents are turned into pigs by a witch.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why is it here:&lt;/strong&gt; It's the japanese Alice in Wonderland and Miyazaki shows us once again how beautiful hand-drawn animation is. Spirited Away is more than a movie, it's an experience.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The scene:&lt;/strong&gt; The ride in the train.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-apartment-1960"&gt;
&lt;h2&gt;&lt;strong&gt;The Apartment (1960)&lt;/strong&gt;&lt;/h2&gt;
&lt;img alt="Shot from the movie The Apartment, made in 1960" class="align-center" src="images/11-10-apartment.png" /&gt;
&lt;p class="center"&gt;&lt;em&gt;&amp;quot;Shut up and deal.&amp;quot; - Fran Kubelik&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Director:&lt;/strong&gt; Billy Wilder.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The plot:&lt;/strong&gt; An insurance clerk allows senior coworkers to have affairs in his apartment to help him climb the corporate ladder. He's also in love with the building's elevator girl.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why is it here:&lt;/strong&gt; The Apartment goes deeper than the average romantic comedy. It's funny? Yep. The leads have amazing chemistry? Absolutely. But there's just a hint of sadness and loneliness injected in this group of broken characters that pushes this movie over the line, making it one of the best and most rewatchable films ever made. It meshes all of these elements so naturally and with such delicacy that even the absurd premise sounds like a normal day at the office.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The scene:&lt;/strong&gt; The ending. A lot of romantic comedies end in similar fashion. They end this way because of the brilliance of this movie final sequence.&lt;/p&gt;
&lt;p&gt;That's it. I'm interested in watching more movies in the near future. I wrote movie and TV reviews during my teen years and it has always been a pleasure of mine. While adult life limits my time to write extensive reviews, I plan to add some sort of frequency to my posts here and quick texts about movies are a good alternative. Let's see what the future holds.&lt;/p&gt;
&lt;/div&gt;
</content><category term="movies"></category><category term="amazon"></category><category term="aws"></category><category term="work"></category><category term="movies"></category></entry><entry><title>Day One</title><link href="https://andrefellipe.com/aws-day-one.html" rel="alternate"></link><published>2020-05-03T01:56:00-03:00</published><updated>2020-05-03T01:56:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2020-05-03:/aws-day-one.html</id><summary type="html">&lt;p class="first last"&gt;After graduating from college, I became an Amazonian. Let's talk a little bit about this process and this awesome beginning. This post was written to the sound of the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Top_Gun_(soundtrack)"&gt;soundtrack from Top Gun&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=siwpn14IE7E"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Wow.&lt;/p&gt;
&lt;p&gt;What a ride the last few months have been.&lt;/p&gt;
&lt;p&gt;As you may already figured out, I got hired by Amazon after graduating from college.&lt;/p&gt;
&lt;p&gt;To be more specific, I'm currently part of Amazon Web Services (AWS).&lt;/p&gt;
&lt;p&gt;To be even more specific, I'm a part of AWS Tech U Program, a special program for new graduates to train them to become Solutions Architects. I got the opportunity to move from my hometown, Natal, to Latin America's biggest city - in terms of population, Sao Paulo. It was a brilliant recruitment experience and an amazing onboarding process at AWS.&lt;/p&gt;
&lt;p&gt;But, then, the world stopped.&lt;/p&gt;
&lt;p&gt;COVID-19 happened.&lt;/p&gt;
&lt;p&gt;I actually spent just one week on-premises before AWS decided that I could work from home during the pandemic. I didn't even setup my workspace properly. There's probably an unplugged HDMI cable hanging out at my desk as you're reading this.&lt;/p&gt;
&lt;p&gt;I'm not going to dwell much about the situation since everybody is living it, but I would like to point it out how grateful - some might say even lucky - I am right now to have started my career here. The carnage from the pandemic can not be understated. I got relatives and friends that lost jobs as soon as the quarantines started. Of course, as almost everyone on planet Earth right now, I'm a little bit anxious about my future, but so far I'm grateful that the effects haven't affected the program - even though anything can happen. The only thing I can do is work hard and be mindful about my health and the health of everyone around me.&lt;/p&gt;
&lt;p&gt;Actually, that's not the only thing I can do. I can watch Married... with Children. I'm currently on season 3. Jim Halpert may have to watch out, Al Bundy is making a big case to be my new favorite TV character.&lt;/p&gt;
&lt;p&gt;Anyways, I hope that everything comes back to normal as soon as possible. COVID-19 looks like my generation's defining moment... and I'm sure we will overcome it.&lt;/p&gt;
</content><category term="work"></category><category term="amazon"></category><category term="aws"></category><category term="work"></category></entry><entry><title>Quant boys, quant boys, whatcha gonna do</title><link href="https://andrefellipe.com/cfm-2019.html" rel="alternate"></link><published>2020-01-26T23:20:00-03:00</published><updated>2020-01-26T23:20:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2020-01-26:/cfm-2019.html</id><summary type="html">&lt;p class="first last"&gt;At the end of 2019, I participated in another data science competition, this time related to finance. This post was written to the sound of The Police's &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Outlandos_d%27Amour"&gt;Outlandos d'Amour'&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=nH0vjLwMyc4"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I participated in my second data science competition last month and it was again a worthy experience.&lt;/p&gt;
&lt;p&gt;My team, composed of myself and two friends, competed with 131 teams from all over the world at &lt;a class="reference external" href="https://www.cfm.fr/"&gt;Capital Fund Management&lt;/a&gt;’s 2019 supervised machine learning challenge, hosted at &lt;a class="reference external" href="https://en.wikipedia.org/wiki/%C3%89cole_normale_sup%C3%A9rieure_(Paris)"&gt;ENS&lt;/a&gt;’s &lt;a class="reference external" href="https://challengedata.ens.fr/"&gt;Challenge Data&lt;/a&gt; platform.&lt;/p&gt;
&lt;p&gt;The goal was to predict sign accuracy using anonymized US stock returns data, a highly stochastic dataset with 1 million lines and 74 columns (training + test).&lt;/p&gt;
&lt;p&gt;The group split between different tasks such as feature engineering, essaying neural network architectures (my part) and AutoML frameworks, and applying traditional ML methods like GBMs.&lt;/p&gt;
&lt;p&gt;Our best submission was a CNN-based one that unfortunately overfit the training data a little, which gave us the final ranking of 15.&lt;/p&gt;
&lt;p&gt;We did this in less than a month. I believe that we will participate again this year and we're going to go even further since we have more time.&lt;/p&gt;
&lt;p&gt;The first place wins an iPad. I never had one and, oh boy, I want it.&lt;/p&gt;
&lt;p&gt;After winning in 2020, all three of us then can become quant traders and be filthy rich for the rest of our lives. Finance is awesome!&lt;/p&gt;
&lt;p&gt;Stay tuned next year to find out if the plan goes accordingly.&lt;/p&gt;
</content><category term="portfolio"></category><category term="statistics"></category><category term="data science"></category><category term="python"></category></entry><entry><title>This is the end, beautiful friend</title><link href="https://andrefellipe.com/ufrn-final-project.html" rel="alternate"></link><published>2019-12-01T15:30:00-03:00</published><updated>2019-12-01T15:30:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2019-12-01:/ufrn-final-project.html</id><summary type="html">&lt;p class="first last"&gt;I've presented my final project at the university last week. This post was written to the sound of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/The_Doors_(album)"&gt;The Doors'&lt;/a&gt; eponymous album. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=BXqPNlng6uI"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;So, I'm only a few days away from officially becoming an electrical engineer. The final step was taken last thursday. I did my presentation and the professors loved it. One of the them even invited me to do my master's degree with him.&lt;/p&gt;
&lt;p&gt;Here's the official photo:&lt;/p&gt;
&lt;img alt="Professor Max Chianca, myself and professor Marcos Dias." class="align-center" src="images/08-01-Final-Project-Presentation.jpeg" /&gt;
&lt;p&gt;If you didn't realized yet from older posts, I'm always the tall one.&lt;/p&gt;
&lt;p&gt;My final project was a very easy one. Last july, during my Electrical Substations class, the professor suggested that developing a program to design grounding grids for substations alongside a tool for soil stratification would be a good idea for a final project. I thought to myself &amp;quot;Hey, I can do this very quickly&amp;quot; and I did it in two weeks.&lt;/p&gt;
&lt;p&gt;Originally, I did it on MATLAB. In the beginning of september I think, I decided to develop an API using Django and put it up on Heroku. Then, I created a small form to consume the API and used Heroku again to leave it online.&lt;/p&gt;
&lt;p&gt;The MATLAB and Python code can be found on &lt;a class="reference external" href="https://github.com/andrefellipe/esd"&gt;GitHub&lt;/a&gt; and the live website is on this weird &lt;a class="reference external" href="https://grounding-design.herokuapp.com/index.html"&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The math behind everything is not very difficult and I'm not going to dwell on it much. Basically, we have to minimize this function to do the soil stratification with two layers:&lt;/p&gt;
&lt;img alt="Least squares equation for two-layer soil stratification." class="align-center" src="images/08-02-Equation.png" /&gt;
&lt;p&gt;Also, there's a block diagram on the standard IEEE 80-2000 that I followed to check if the grounding grid has adequate touch and step voltages:&lt;/p&gt;
&lt;img alt="Design procedure block diagram." class="align-center" src="images/08-03-Design-Procedure-Block-Diagram.png" /&gt;
&lt;p&gt;Even though this is not a difficult project, I liked because it was something that was done very quickly. I loved because I did it very early and had the time to focus on more important things for my career.&lt;/p&gt;
&lt;p&gt;If you need a simple tool to do soil stratification and check if your rectangular grounding grid is safe, you're good to go.&lt;/p&gt;
&lt;p&gt;This is it.&lt;/p&gt;
&lt;p&gt;The end.&lt;/p&gt;
&lt;p&gt;I'm a electrical engineer now.&lt;/p&gt;
&lt;p&gt;Let's see what the future holds.&lt;/p&gt;
</content><category term="portfolio"></category><category term="matlab"></category><category term="python"></category><category term="ufrn"></category></entry><entry><title>Is it just me, or is it hot in here?</title><link href="https://andrefellipe.com/ufrn-data-science-comp-2019.html" rel="alternate"></link><published>2019-11-20T23:00:00-03:00</published><updated>2019-11-20T23:00:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2019-11-20:/ufrn-data-science-comp-2019.html</id><summary type="html">&lt;p class="first last"&gt;Let's talk about my first participation on a data science competition. This post was written to the sound of The Killers' &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hot_Fuss"&gt;Hot Fuss&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=gGdGFtwCNBE"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;A colleague of mine invited me to create a team to win the 2019 UFRN Data Science Competition last month. I've never participated in one before and I thought that it was a cool experience. Our five-person group had a couple of days to do any kind of analysis on meteorological data provided by INMET, the government agency responsible for this kind of stuff.&lt;/p&gt;
&lt;p&gt;We had to move quickly and precisely to bring to the public a creative analysis of a lot of data - basically everything related to temperatures, humidity, wind and similar variables from 1961 to today from every part of Brazil.&lt;/p&gt;
&lt;p&gt;We visualized the impact that this year's Amazon fires had on the data through geospatially visualizing temperature differences according to a baseline, running a PCA and investigating spatial patterns, and forecasting temperatures to look for anomalies. My job was to do the last part using this cool tool from Facebook called &lt;a class="reference external" href="https://facebook.github.io/prophet/docs/quick_start.html"&gt;Prophet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, we came up short and got second place. I honestly believe that we should have won it and one member of my team even argued with the judges a little bit, but to no avail.&lt;/p&gt;
&lt;p&gt;It was a cool debut, though. Right now, we are getting prepared to try again in similar competitions.&lt;/p&gt;
&lt;p&gt;The most unfortunate part of everything was the fact that when we got to the front to receive our medals, there were two cameras, one from one of the professors and the official one of the event. I didn't notice that and put my focus on the professor's one.&lt;/p&gt;
&lt;p&gt;So, yeah, I look kind of stupid in the picture.&lt;/p&gt;
&lt;img alt="The whole team receiving the medals." class="align-center" src="images/07-01-Team-Picture.jpeg" /&gt;
&lt;p&gt;Jesus, sometimes I forget how tall I am.&lt;/p&gt;
&lt;p&gt;The final presentation and all of the code can be found on GitHub. You can access it with this &lt;a class="reference external" href="https://github.com/vitorsr/ccd"&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And through this &lt;a class="reference external" href="https://marcusnunes.me/posts/resultados-da-competicao-de-ciencia-de-dados-da-ufrn-2019/"&gt;one&lt;/a&gt;, you can check out more information about the competition. If you know brazilian portuguese, that is.&lt;/p&gt;
&lt;p&gt;PS: From left to right in the picture, we have André L., Ianca, Prof. Nunes¹, Vítor, &lt;em&gt;moi&lt;/em&gt; and Mariana. We are the &lt;strong&gt;weeee&lt;/strong&gt; team!&lt;/p&gt;
&lt;p&gt;¹ Prof. Nunes was one of the judges.&lt;/p&gt;
</content><category term="portfolio"></category><category term="statistics"></category><category term="data science"></category><category term="python"></category><category term="ufrn"></category></entry><entry><title>E&amp;Q Online</title><link href="https://andrefellipe.com/eq.html" rel="alternate"></link><published>2019-05-01T17:00:00-03:00</published><updated>2019-05-01T17:00:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2019-05-01:/eq.html</id><summary type="html">&lt;p class="first last"&gt;A brief description of one freelance project I've just did and how it came about. This post was written to the sound of The Clash's &lt;a class="reference external" href="https://en.wikipedia.org/wiki/London_Calling"&gt;London Calling&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=ertt3o1x65c"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;During the first semester of 2018, I was an intern at a small local company. The company's name is &lt;a class="reference external" href="https://www.engenhariaequalidade.com.br/"&gt;Engenharia &amp;amp; Qualidade&lt;/a&gt; and it has been around for more than two decades. It has 10 employees as of May/2019, including the two main partners, and a long range of services that goes from structured cabling to studies of grounding and soil resistivity testing of substations. Basically, the company can solve anything in the fields of electrical installations and telecommunications thanks to the expertise of its two owners. Its major client is one of the biggest (if not the biggest) supermarket chains of my state, &lt;a class="reference external" href="http://www.nordestao.com.br/"&gt;Nordestão&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In my internship, I was responsible for the budgets and, sometimes, the supervision of the execution of some projects. As you may already know, there was a lot of Excel and AutoCAD involved. It was a brilliant experience, but, after my six months there, I came to the conclusion that this would not be something that I would like to do for a living.&lt;/p&gt;
&lt;p&gt;I decided to not renew my contract after one semester. During my time there, I automated a lot of the tasks on the spreadsheets that the company had, but there was a gap because we used a lot of different management tools. Excel for the budget, an old software made with VB to manage the clients and the warehouse, a physical book that the employees signed with the worked hours, etc. One of my ideas after dealing with all of that was to replace everything with something that could unify everything the company did.&lt;/p&gt;
&lt;p&gt;I wasn't able to implement the system while I was an intern because my actual job (budgets and supervision of projects) didn't allowed me the time. This year, however, I approached the owners with this idea and they thought it would be great if I developed a website with all of necessary functionalities. We agreed on a price and, during the months of march and april, I've developed E&amp;amp;Q Online, a website hosted at the company own server to internal use.&lt;/p&gt;
&lt;p&gt;This is the login screen:&lt;/p&gt;
&lt;img alt="The login screen." class="align-center" src="images/06-01-EQ-01.png" /&gt;
&lt;p&gt;And this is the homepage after the user logs in:&lt;/p&gt;
&lt;img alt="The homepage after the login screen." class="align-center" src="images/06-02-EQ-02.png" /&gt;
&lt;p&gt;Thanks to the agreement between me and the owners, I am going to be very selective of what parts of the website I am going to discuss here.&lt;/p&gt;
&lt;p&gt;As you can see, there's nine areas in the platform: &lt;strong&gt;Log&lt;/strong&gt;, &lt;strong&gt;Users&lt;/strong&gt;, &lt;strong&gt;Suppliers&lt;/strong&gt;, &lt;strong&gt;Clients&lt;/strong&gt;, &lt;strong&gt;Transport&lt;/strong&gt;, &lt;strong&gt;Warehouse&lt;/strong&gt;, &lt;strong&gt;Proposals&lt;/strong&gt;, &lt;strong&gt;Orders&lt;/strong&gt; and &lt;strong&gt;Accounts&lt;/strong&gt;. Let's do a brief rundown of each:&lt;/p&gt;
&lt;div class="section" id="log"&gt;
&lt;h2&gt;Log&lt;/h2&gt;
&lt;p&gt;Here, the users can register when they arrive at the company, when they go out to lunch, when they return and when they leave. Also, the users are able to register any missing day. The users in the &lt;strong&gt;Administrator&lt;/strong&gt; category can see, update or delete the records and missing days from all of the users. If the user is not a part of this category, he can only see his own records.&lt;/p&gt;
&lt;p&gt;Here's the screen where the user can choose what's the type of logging that he's doing it:&lt;/p&gt;
&lt;img alt="The screen where the user can choose the type of logging." class="align-center" src="images/06-03-EQ-03.png" /&gt;
&lt;p&gt;If the user chooses the first option, he's going to register that he has arrived at the company. After the confirmation, a new record is created with the current timestamp.&lt;/p&gt;
&lt;img alt="The screen where the user can log in." class="align-center" src="images/06-04-EQ-04.png" /&gt;
&lt;p&gt;As I said before, an administrator can see all of the records in a very friendly manner. He's able to search for any record by using any parameter (the name of the user, the date, the type of entry, etc) and he can update or delete any record:&lt;/p&gt;
&lt;img alt="The screen with all records." class="align-center" src="images/06-05-EQ-05.png" /&gt;
&lt;p&gt;The user can also create a record of absence if he missed a day:&lt;/p&gt;
&lt;img alt="The screen where the user can register an absence." class="align-center" src="images/06-06-EQ-06.png" /&gt;
&lt;p&gt;And an administrator can see all absences. In this particular print, there isn't one registered yet.&lt;/p&gt;
&lt;img alt="The screen where the user can see all absences." class="align-center" src="images/06-07-EQ-07.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="users"&gt;
&lt;h2&gt;Users&lt;/h2&gt;
&lt;p&gt;In the Users section, an administrator can create, update or delete an user:&lt;/p&gt;
&lt;img alt="The screen where the user can see all registered users." class="align-center" src="images/06-08-EQ-08.png" /&gt;
&lt;p&gt;Also, as you can see, the users can alter their passwords. An important part of the &lt;strong&gt;Users&lt;/strong&gt; section is that every week an email is sent to the administrators with the due date of the users' documents. This is relevant because they can see when the document is going to expire and renew it at the right time. Before E&amp;amp;Q Online, the company was not used to keep track of the due dates. So, when a project showed up, part of the workforce would not be able to work because some certification was expired. Right now, the administrators receive a list informing how many days are left, as you can see below:&lt;/p&gt;
&lt;img alt="Example of the email that the administrators receive with the users' documents and their due dates." class="align-center" src="images/06-09-EQ-09.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="clients-and-suppliers"&gt;
&lt;h2&gt;Clients and Suppliers&lt;/h2&gt;
&lt;p&gt;These two sections are basically the same. Create, update and delete the clients and the suppliers of the company. It's worth nothing that one of the most annoying parts of the project was finding out how to retrieve the database already in use in the old software to put it on the website. There where more than one thousand clients and suppliers combined in the old database and the data was in a different setup than the one that we need here, since we'll be connecting these clients and suppliers to other parts of the website. Importing the data from the Access database to the MySQL one that the site uses took almost a full afternoon of work.&lt;/p&gt;
&lt;img alt="The screen where the user can see all registered suppliers." class="align-center" src="images/06-10-EQ-10.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="transport"&gt;
&lt;h2&gt;Transport&lt;/h2&gt;
&lt;p&gt;This section is divided in &lt;strong&gt;Vehicles&lt;/strong&gt;, &lt;strong&gt;Travels&lt;/strong&gt;, &lt;strong&gt;Refuels&lt;/strong&gt; and &lt;strong&gt;Maintenances&lt;/strong&gt;. Here, we can create, update or delete each one of those things. Below you can see a screenshot of a refuel where the gas station listed is from the registered &lt;strong&gt;Suppliers&lt;/strong&gt; section:&lt;/p&gt;
&lt;img alt="The screen where the user can see all registered refuels." class="align-center" src="images/06-11-EQ-11.png" /&gt;
&lt;p&gt;An old problem that has been solved is related to the inspections of the tools that are in the cars. Since the workers are in movement everyday, they need to keep equipment from the warehouse inside the cars and the company needs to ocasionally check if everything that was taken from the warehouse is in the car. If, for instance, a worker loses a screwdriver, the company needs to know and charge him for the slip. That's why in the &lt;strong&gt;Vehicles&lt;/strong&gt; section each vehicle has an inspection button where the user (generally it's the job of an intern to do the inspection) can see a list of the current tools there and check if everything matches. The list of current tools is automatically generated, a feature that we will see in the following section.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="warehouse"&gt;
&lt;h2&gt;Warehouse&lt;/h2&gt;
&lt;p&gt;The warehouse has more than 1.500 products and tools that the company can sell or use in a project. Here, we can basically create, update or delete a product, move the project, keep track of every movement and generate the SPED report, a list with the products and important information that the company needs to send every year to the &lt;em&gt;Receita Federal&lt;/em&gt;, our version of the IRS.&lt;/p&gt;
&lt;p&gt;As you can see below, there's three important buttons to move products around.&lt;/p&gt;
&lt;p&gt;We can make the products go in the warehouse (if we buy a 10 meters of cable and add it to the warehouse, this is the option).&lt;/p&gt;
&lt;p&gt;We can make products go from the warehouse to a service (if we need to take 3 meters of cable and use it in a project, this is the option), we can also make products go from the warehouse to a vehicle or a toolbox (as we kind of pointed out in the section before this one, this is how we keep track of the tools inside the vehicles).&lt;/p&gt;
&lt;p&gt;And, in the third button, we can return products from a car, a toolbox or a service to the warehouse (if we took 3 meters of cable to use it on a project, but only needed one, we can return two so that we can appropriately charge the client only the one that was used).&lt;/p&gt;
&lt;img alt="The screen where the user can see all options in the Warehouse section." class="align-center" src="images/06-12-EQ-12.png" /&gt;
&lt;p&gt;In this example below, we are moving 20 meters of cable that will be used in a project registered (more about orders of service later):&lt;/p&gt;
&lt;img alt="An example of how to move a product out from the warehouse to a service." class="align-center" src="images/06-13-EQ-13.png" /&gt;
&lt;p&gt;As you can see in the screenshot below, all of these movements can be seen in this section of the website:&lt;/p&gt;
&lt;img alt="The screen where the user can see all registered movements." class="align-center" src="images/06-14-EQ-14.png" /&gt;
&lt;p&gt;We can also generate the data that the company has to send to the government every year. Here's a snippet of this report:&lt;/p&gt;
&lt;img alt="The screen where the user can see all registered movements." class="align-center" src="images/06-15-EQ-15.png" /&gt;
&lt;p&gt;To finish, there's the &lt;strong&gt;Toolbox&lt;/strong&gt; subsection, but it's very similar to the &lt;strong&gt;Vehicles&lt;/strong&gt; one. You can create, update and delete toolboxes and make inspections of its contents.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="proposals"&gt;
&lt;h2&gt;Proposals&lt;/h2&gt;
&lt;p&gt;This is the section where we develop the budgets for the services and generate business proposals to send the clients. It's also where we can add services and update their prices. If the company adds to its catalog of services, for instance, &amp;quot;Install photovoltaic panel&amp;quot; and charges R$ 1.000,00 per panel, we can add here so that we can use it in the proposal. Or, in another instance, if the price of &amp;quot;Certification Test for CAT. 6 cable&amp;quot; goes up, we need to update it so that we can make the more recent proposals with the new price.&lt;/p&gt;
&lt;p&gt;To formulate a budget, we need to choose who is the client that we're sending the proposal and list all of the products and services that are needed to do the project. After that, the website calculates how much the material is going to cost, how much the services are going to cost, how much would it cost to do it during business hours and how much would it cost to do it out of the business hours (more expensive).&lt;/p&gt;
&lt;img alt="The screen where the user can calculate the total of a proposal - part 01." class="align-center" src="images/06-16-EQ-16.png" /&gt;
&lt;img alt="The screen where the user can calculate the total of a proposal - part 02." class="align-center" src="images/06-17-EQ-17.png" /&gt;
&lt;p&gt;With all of the prices calculated, the user can create a business proposal to sent it via email to the client and generate lists with the materials and the services needed to this project.&lt;/p&gt;
&lt;img alt="The screen with an example of a proposal." class="align-center" src="images/06-18-EQ-18.png" /&gt;
&lt;img alt="The screen with an example of a list of materials." class="align-center" src="images/06-19-EQ-19.png" /&gt;
&lt;p&gt;The example above is totally random.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="orders"&gt;
&lt;h2&gt;Orders&lt;/h2&gt;
&lt;p&gt;If a proposal is accepted, when the workers go out to execute the project, we need to generate an order. This is what this section is all about. We can update the status of the order (if it's ongoing or if it's finished), we can generate a list with all of the products used in the order (based on the movements that we did at the &lt;strong&gt;Warehouse&lt;/strong&gt; section) and we can print the order so that the workers can take it to the field and fill the informations that the company need.&lt;/p&gt;
&lt;img alt="The screen with an example of an order." class="align-center" src="images/06-20-EQ-20.png" /&gt;
&lt;img alt="The screen with an example of a list of materials that went out to the service." class="align-center" src="images/06-21-EQ-21.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="accounts"&gt;
&lt;h2&gt;Accounts&lt;/h2&gt;
&lt;p&gt;This section is simply about creating, updating and deleting accounts, meaning bills to pay and bills to receive. That's it. Just a few CRUDs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="final-thoughts"&gt;
&lt;h2&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;That's everything. I've tried to summarize the main points of this project. It's a basic, but very functional HTML, CSS, JavaScript, PHP and MySQL combo. There's a couple of libraries and plugins that helped a lot, like jQuery, Bootstrap, RainTPL, Composer, PHPMailer and a couple of others that I don't recall at this moment.&lt;/p&gt;
&lt;p&gt;The expectation is that we can increase the company's productivity with the website and I'm very confident that this will be achieved.&lt;/p&gt;
&lt;p&gt;If you want to know more about the details of the implementation, you can contact me at &lt;a class="reference external" href="mailto:andrefellipern&amp;#64;gmail.com"&gt;andrefellipern&amp;#64;gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content><category term="portfolio"></category><category term="freelance"></category><category term="html"></category><category term="css"></category><category term="javascript"></category><category term="php"></category></entry><entry><title>The 24 Canucks</title><link href="https://andrefellipe.com/swap-regions-opencv.html" rel="alternate"></link><published>2018-10-23T00:15:00-03:00</published><updated>2018-10-23T00:15:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2018-10-23:/swap-regions-opencv.html</id><summary type="html">&lt;p class="first last"&gt;An application that swaps rectangular regions of an image using the OpenCV library. This post was written to the sound of Pavement's &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Crooked_Rain,_Crooked_Rain"&gt;Crooked Rain, Crooked Rain&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=lPvhKV3Yg2k"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;A question before we start: is Pavement the greatest band ever?&lt;/p&gt;
&lt;p&gt;A difficult question, sure, but one we have to answer somehow. And, of course, the answer is:&lt;/p&gt;
&lt;p&gt;Quite possibly, &lt;strong&gt;yes&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Now that we've got this extensive discussion out of our systems, let's talk about how we swap regions of an image using the OpenCV library. Let's call it... &lt;strong&gt;The Swapper&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Writer's note&lt;/strong&gt;: I've watched &lt;a class="reference external" href="https://en.wikipedia.org/wiki/The_Player_(film)"&gt;The Player&lt;/a&gt; recently and this title is my terrible homage to this great movie.&lt;/p&gt;
&lt;p&gt;Here's what the user can do with it:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Open an image from his file system;&lt;/li&gt;
&lt;li&gt;Randomly swap the quadrants of the image;&lt;/li&gt;
&lt;li&gt;Swap the quadrants of the image selecting a personalized layout configuration;&lt;/li&gt;
&lt;li&gt;Restore the original image;&lt;/li&gt;
&lt;li&gt;Save a new image with one of the operations applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can see &lt;strong&gt;The Swapper&lt;/strong&gt; in action below:&lt;/p&gt;
&lt;img alt="Animated .gif that shows the user opening an image, swapping its regions and saving the new image." class="align-center" src="images/05-01-TheSwapperDemo.gif" /&gt;
&lt;p&gt;To develop this application, we need to know a little about the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/util/ArrayList.html"&gt;ArrayList&lt;/a&gt; class and the concatenation of &lt;strong&gt;Mat&lt;/strong&gt; objects with the OpenCV library. There's a lot of different ways to swap the regions. I've chosen this one for &lt;strong&gt;The Swapper&lt;/strong&gt; for no particular reason.&lt;/p&gt;
&lt;div class="section" id="the-odd-image-problem"&gt;
&lt;h2&gt;The odd image problem&lt;/h2&gt;
&lt;p&gt;Before we talk about changing regions of the image, we must solve an improbable, but possible problem. What if our image has an odd number of rows or columns? This would mean that the regions would not have the same amount of pixels with the division of the quadrants. Such situation can make the swap more difficult. To make things simpler, we first check if the image has an odd number of rows or columns and, if that's the case, we add a padding to make sure that everything is even.&lt;/p&gt;
&lt;p&gt;As you can see below, we do this with the &lt;a class="reference external" href="https://docs.opencv.org/3.4/javadoc/org/opencv/core/Core.html#copyMakeBorder-org.opencv.core.Mat-org.opencv.core.Mat-int-int-int-int-int-"&gt;copyMakeBorder()&lt;/a&gt; method:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cm"&gt;/** Adding padding to the image if there&amp;#39;s an odd number of rows and/or columns */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;copyMakeBorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;copyMakeBorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="respecting-the-user-s-choice"&gt;
&lt;h2&gt;Respecting the user's choice&lt;/h2&gt;
&lt;p&gt;In our application, we have two ways to choose how to swap the regions of the image: one is random and another is doing it ourselves. In both cases, we will fill an &lt;strong&gt;ArrayList&lt;/strong&gt; object named &lt;strong&gt;regions&lt;/strong&gt; with numbers from 0 to 3 where each one represents one region and its position reflects the quadrant where we want to put the region. Take a look at the picture below:&lt;/p&gt;
&lt;img alt="A square with four squares inside of it. The first square has the number 1 and the color orange, the second has the number 2 and the color red, the third has the number 3 and the color green and the fourth has the number 4 and the color blue." class="align-center" src="images/05-02-Regions.png" /&gt;
&lt;p&gt;The numbers can be seen as the regions in the &lt;strong&gt;ArrayList&lt;/strong&gt; object and the squares are the quadrants. If we have a &lt;strong&gt;regions&lt;/strong&gt; object with elements (1, 0, 2, 3), we're swapping the content of the regions in the upper half of the image.&lt;/p&gt;
&lt;p&gt;To perform a random swap, we add 0, 1, 2 and 3 to &lt;strong&gt;regions&lt;/strong&gt; and then shuffle it with the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/util/Collections.html#shuffle(java.util.List)"&gt;shuffle()&lt;/a&gt; method from the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/util/Collections.html"&gt;Collections&lt;/a&gt; class to get a random order.&lt;/p&gt;
&lt;p&gt;In the other case, we only need to check if the user's input is valid and get the values to the &lt;strong&gt;regions&lt;/strong&gt; object.&lt;/p&gt;
&lt;p&gt;Here's the code to do this part:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cm"&gt;/** Creating a List object that contains four numbers, each one to represent one region&lt;/span&gt;
&lt;span class="cm"&gt;     *  of the image. */&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;regions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NUMBER_OF_QUADRANTS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/** Deciding the order of each region on the new image using the user&amp;#39;s choice.&lt;/span&gt;
&lt;span class="cm"&gt;     *  If he chose a random swap, we create a list with numbers from 0 to 3 and put them&lt;/span&gt;
&lt;span class="cm"&gt;     *  in random order.&lt;/span&gt;
&lt;span class="cm"&gt;     *  If he chose a personalized swap, we first check if he chose the same region more&lt;/span&gt;
&lt;span class="cm"&gt;     *  than once. Since we want to swap regions, there must not be duplicates.&lt;/span&gt;
&lt;span class="cm"&gt;     *  If the configurate is appropriate, we create the list of regions from the user&amp;#39;s choice.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;randomSwapConfiguration&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;NUMBER_OF_QUADRANTS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;Collections&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;checkSpinners&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;getSpinnersValues&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firstQuadrantSpinnerValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secondQuadrantSpinnerValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thirdQuadrantSpinnerValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fourthQuadrantSpinnerValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="choosing-the-right-points"&gt;
&lt;h2&gt;Choosing the right points&lt;/h2&gt;
&lt;p&gt;We're going to need five &lt;strong&gt;Point&lt;/strong&gt; objects (&lt;strong&gt;origin&lt;/strong&gt;, &lt;strong&gt;middle&lt;/strong&gt;, &lt;strong&gt;lowerLeftCorner&lt;/strong&gt;, &lt;strong&gt;upperRightCorner&lt;/strong&gt; and &lt;strong&gt;lowerRightCorner&lt;/strong&gt;) to create the four &lt;strong&gt;Rect&lt;/strong&gt; objects, each one with the points, from where we're going to create our &lt;strong&gt;Mat[]&lt;/strong&gt; object with the four regions. Here's how to do this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cm"&gt;/** Defining the points that characterize each region. */&lt;/span&gt;
    &lt;span class="n"&gt;Point&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Point&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Point&lt;/span&gt; &lt;span class="n"&gt;lowerLeftCorner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;Point&lt;/span&gt; &lt;span class="n"&gt;upperRightCorner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Point&lt;/span&gt; &lt;span class="n"&gt;lowerRightCorner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="cm"&gt;/** Creating an array of Mat objects to contain the four regions of the image. */&lt;/span&gt;
    &lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;imageRegions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NUMBER_OF_QUADRANTS&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="cm"&gt;/** First region: upper left of the image. */&lt;/span&gt;
    &lt;span class="n"&gt;imageRegions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="cm"&gt;/** Second region: upper right of the image. */&lt;/span&gt;
    &lt;span class="n"&gt;imageRegions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;upperRightCorner&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="cm"&gt;/** Third region: lower left of the image. */&lt;/span&gt;
    &lt;span class="n"&gt;imageRegions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lowerLeftCorner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="cm"&gt;/** Fourth region: lower right of the image. */&lt;/span&gt;
    &lt;span class="n"&gt;imageRegions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lowerRightCorner&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="concatenating-the-situation"&gt;
&lt;h2&gt;Concatenating the situation&lt;/h2&gt;
&lt;p&gt;We need to concatenate the elements of the &lt;strong&gt;imageRegions&lt;/strong&gt; object and put together the swapped image at the end. In our case, since there are four quadrants that we're working on, we will first create a &lt;strong&gt;List&amp;lt;Mat&amp;gt;&lt;/strong&gt; object called &lt;strong&gt;upperHalfMatList&lt;/strong&gt; to contain the first two quadrants (upper left and upper right of the image), then concatenate these two together in a &lt;strong&gt;Mat&lt;/strong&gt; called &lt;strong&gt;upperHalfImage&lt;/strong&gt;. Next, we do the same process to the lower quadrants using &lt;strong&gt;lowerHalfMatList&lt;/strong&gt; and &lt;strong&gt;lowerHalfImage&lt;/strong&gt;. To end, we concatenate vertically &lt;strong&gt;upperHalfImage&lt;/strong&gt; and the &lt;strong&gt;lowerHalfImage&lt;/strong&gt; to generate our swapped image in the &lt;strong&gt;currentImage&lt;/strong&gt; object.&lt;/p&gt;
&lt;p&gt;Here's how everything comes together:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cm"&gt;/** Creating a Mat that contains the upper half of the swapped image. */&lt;/span&gt;
    &lt;span class="n"&gt;Mat&lt;/span&gt; &lt;span class="n"&gt;upperHalfImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="cm"&gt;/** Creating a List&amp;lt;Mat&amp;gt; object that contains the upper half of the swapped image. */&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;upperHalfMatList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NUMBER_OF_QUADRANTS&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/** Putting the region randomly selected (or selected by the user) on the first quadrant. */&lt;/span&gt;
    &lt;span class="n"&gt;upperHalfMatList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imageRegions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/** Putting the region randomly selected (or selected by the user) on the second quadrant. */&lt;/span&gt;
    &lt;span class="n"&gt;upperHalfMatList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imageRegions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/** Concatenating the upper Mat objects together. */&lt;/span&gt;
    &lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hconcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upperHalfMatList&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;upperHalfImage&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/** Creating a Mat that contains the lower half of the swapped image. */&lt;/span&gt;
    &lt;span class="n"&gt;Mat&lt;/span&gt; &lt;span class="n"&gt;lowerHalfImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="cm"&gt;/** Creating a List&amp;lt;Mat&amp;gt; object that contains the lower half of the swapped image. */&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;lowerHalfMatList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NUMBER_OF_QUADRANTS&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/** Putting the region randomly selected (or selected by the user) on the third quadrant. */&lt;/span&gt;
    &lt;span class="n"&gt;lowerHalfMatList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imageRegions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/** Putting the region randomly selected (or selected by the user) on the fourth quadrant. */&lt;/span&gt;
    &lt;span class="n"&gt;lowerHalfMatList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imageRegions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;regions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/** Concatenating the lower Mat objects together. */&lt;/span&gt;
    &lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hconcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lowerHalfMatList&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lowerHalfImage&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/** Creating a List&amp;lt;Mat&amp;gt; object that contains the upper and lower halves of the swapped image. */&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;swappedImageMatList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NUMBER_OF_QUADRANTS&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/** Putting the upper half of the image on the list. */&lt;/span&gt;
    &lt;span class="n"&gt;swappedImageMatList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upperHalfImage&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/** Putting the lower half of the image on the list. */&lt;/span&gt;
    &lt;span class="n"&gt;swappedImageMatList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lowerHalfImage&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/** Concatenating vertically to create the swapped image. */&lt;/span&gt;
    &lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;vconcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;swappedImageMatList&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Booyah! Another cool exercise done with the OpenCV library. By the way, there are 24 combinations that can be done with the permutations, so that's where the post's title came from.&lt;/p&gt;
&lt;/div&gt;
</content><category term="digital image processing"></category><category term="java"></category><category term="swing"></category><category term="opencv"></category><category term="dip"></category></entry><entry><title>Negative andre</title><link href="https://andrefellipe.com/negative-opencv.html" rel="alternate"></link><published>2018-10-21T18:23:00-03:00</published><updated>2018-10-21T18:23:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2018-10-21:/negative-opencv.html</id><summary type="html">&lt;p class="first last"&gt;An application that changes pixels values in an image using the OpenCV library. This post was written to the sound of U2's &lt;a class="reference external" href="https://en.wikipedia.org/wiki/War_(U2_album)"&gt;War&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=EM4vblG6BVQ"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Good news, everyone: I'm running again. I've restarted yesterday and I hope to continue for a long time. It's been a while, so I'm taking it easy.&lt;/p&gt;
&lt;p&gt;With this great news in mind, let's talk about how we can work with pixels using the OpenCV library. Today's application is called &lt;strong&gt;Playing with Pixels&lt;/strong&gt;. Here's what the user can do with it:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Open an image from his file system;&lt;/li&gt;
&lt;li&gt;Choose a region or the whole image to apply operations;&lt;/li&gt;
&lt;li&gt;Change all of the pixels of the selected region to black;&lt;/li&gt;
&lt;li&gt;Change all of the pixels of the selected region to red;&lt;/li&gt;
&lt;li&gt;Change all of the pixels of the selected region to its color's complement;&lt;/li&gt;
&lt;li&gt;Restore the original image;&lt;/li&gt;
&lt;li&gt;Save a new image with one of the operations applied.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can see the &lt;strong&gt;Playing with Pixels&lt;/strong&gt; application in action below:&lt;/p&gt;
&lt;img alt="Animated .gif that shows the user opening an image, changing it to black, then to red, then to its negative, then restoring back to the original. Then, the user applies the negative to only one area and saves the new image." class="align-center" src="images/04-01-PlayingWithPixelsDemo.gif" /&gt;
&lt;p&gt;Wow! There's a lot of noise in this &lt;strong&gt;.gif&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, in this post, I won't explain everything step-by-step like previously. You can take a look at this &lt;a class="reference external" href="https://github.com/andrefellipe/dip/blob/master/src/Exercise02.java"&gt;link&lt;/a&gt; to see how I've created the user interface. To make things shorter, I will only explain parts of the most important methods.&lt;/p&gt;
&lt;div class="section" id="determining-the-region-of-interest"&gt;
&lt;h2&gt;Determining the Region of Interest&lt;/h2&gt;
&lt;p&gt;A region of interest (ROI) is a part of an image that we want to operate on. We can use any polygon to create ROIs. Here, we're using a rectangle. The user can choose the coordinates of the first point, the upper-left corner of the rectangle, and of the second point, the lower-right corner of the rectangle. If the user doesn't want to choose the points, the full image will compose our ROI. The radio buttons on the interface inform us what the user wants.&lt;/p&gt;
&lt;p&gt;Also, to make it a more smooth user experience, we validate the user's input in the fields to make sure that he has chosen a valid positive integer (the &lt;strong&gt;getValueFromField()&lt;/strong&gt; method is responsible for this) and that this number is a valid pixel of the image (you can't choose the pixel in row 3000 and column 2000 if the image's resolution is 500x500).&lt;/p&gt;
&lt;p&gt;Let's take a look at the code that does what was described:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;   * Method that detects the button pressed by the user and performs&lt;/span&gt;
&lt;span class="cm"&gt;   * the appropriate operation.&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;operationsButtonActionPerformed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ActionEvent&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/** Creating a full copy of the original image and storing it at&lt;/span&gt;
&lt;span class="cm"&gt;     *  another Mat object to keep the original unaltered. */&lt;/span&gt;
    &lt;span class="n"&gt;currentImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/** Checking which option the user chose in relation to where to&lt;/span&gt;
&lt;span class="cm"&gt;     *  apply the operation. If it&amp;#39;s in the full image, then the first&lt;/span&gt;
&lt;span class="cm"&gt;     *  vertice of the rectangle that defines the region should be at the&lt;/span&gt;
&lt;span class="cm"&gt;     *  origin of the image and the second vertices at the last pixel, whose&lt;/span&gt;
&lt;span class="cm"&gt;     *  position is equal to the number of columns and rows that the image has.&lt;/span&gt;
&lt;span class="cm"&gt;     *  Else, if the user chose to insert himself the region of interest,&lt;/span&gt;
&lt;span class="cm"&gt;     *  the application must get the value from the fields and define the points&lt;/span&gt;
&lt;span class="cm"&gt;     *  accordingly.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fullImageChosen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;firstPointX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;firstPointY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;secondPointX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;secondPointY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;firstPointX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getValueFromField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firstPointXField&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;firstPointY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getValueFromField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firstPointYField&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;secondPointX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getValueFromField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secondPointXField&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;secondPointY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getValueFromField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secondPointYField&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Creating the points according to the choice made by the user.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;firstPoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firstPointX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;firstPointY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;secondPoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secondPointX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;secondPointY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Checking if the user chose a value outside of the image, something&lt;/span&gt;
&lt;span class="cm"&gt;     * that is not acceptable. If the user chose a value beyond the image&amp;#39;s&lt;/span&gt;
&lt;span class="cm"&gt;     * height or width, then this value is readjusted to the image&amp;#39;s border value.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firstPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;firstPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;secondPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;secondPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firstPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;firstPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;firstPointXField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;firstPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firstPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;firstPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;firstPointYField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;firstPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secondPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;secondPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;secondPointXField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;secondPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secondPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;secondPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;secondPointYField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;secondPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Our rectangle is created with the help from an object from the &lt;a class="reference external" href="https://docs.opencv.org/3.4/javadoc/org/opencv/core/Rect.html"&gt;Rect&lt;/a&gt; class. We use its constructor to create a rectangle with the vertices defined by the chosen two points.&lt;/p&gt;
&lt;p&gt;To get our ROI, we create a new object from the &lt;strong&gt;Mat&lt;/strong&gt; class, &lt;strong&gt;roiMat&lt;/strong&gt;. This object is created by using a &lt;a class="reference external" href="https://docs.opencv.org/3.4/javadoc/org/opencv/core/Mat.html#Mat-org.opencv.core.Mat-org.opencv.core.Rect-"&gt;constructor&lt;/a&gt; from the &lt;strong&gt;Mat&lt;/strong&gt; class that allows us to pass a &lt;strong&gt;Mat&lt;/strong&gt; object and a &lt;strong&gt;Rect&lt;/strong&gt; object. The result is only the content from the &lt;strong&gt;Mat&lt;/strong&gt; that resides in the area defined by the &lt;strong&gt;Rect&lt;/strong&gt;. If the chosen points were (0,0) and (10,10), our &lt;strong&gt;roiMat&lt;/strong&gt; would be a 10x10 square with the content of the original image from this exact area.&lt;/p&gt;
&lt;p&gt;As we did previously, we need to pass the content from the ROI to a byte array, our good old &lt;strong&gt;buffer&lt;/strong&gt;, a process that we've seen here before.&lt;/p&gt;
&lt;p&gt;The following code creates our ROI and pass its content to our &lt;strong&gt;buffer&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Creating a Mat object with the region of interest chosen by the user.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;Mat&lt;/span&gt; &lt;span class="n"&gt;roiMat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentImage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firstPoint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;secondPoint&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="cm"&gt;/** We need to create a byte array that will store the matImage contents.&lt;/span&gt;
&lt;span class="cm"&gt;     *  We find the size of this array through the number of elements in the&lt;/span&gt;
&lt;span class="cm"&gt;     *  Mat object. */&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bufferSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roiMat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;channels&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;roiMat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;roiMat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/** Creating the byte array. */&lt;/span&gt;
    &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bufferSize&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cm"&gt;/** Using the get() method to put all of the elements of the region of interest&lt;/span&gt;
&lt;span class="cm"&gt;     *  inside the byte array. */&lt;/span&gt;
    &lt;span class="n"&gt;roiMat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="changing-the-pixels-of-the-roi"&gt;
&lt;h2&gt;Changing the pixels of the ROI&lt;/h2&gt;
&lt;p&gt;In our application, we store the information about which button the user clicked with the &lt;strong&gt;buttonChosen&lt;/strong&gt; &lt;strong&gt;String&lt;/strong&gt; and use it as the key to a &lt;strong&gt;switch&lt;/strong&gt; statement to determine what should be done. If the user wants to show it back the original image, we only need to assign our &lt;strong&gt;currentImage&lt;/strong&gt; &lt;strong&gt;Mat&lt;/strong&gt; object to the &lt;strong&gt;originalImage&lt;/strong&gt; object that we made sure it wasn't going to be altered in any circumstance. In the other cases, we need to alter the pixels in our buffer and then put it back in the &lt;strong&gt;roiMat&lt;/strong&gt; before showing it again on the screen.&lt;/p&gt;
&lt;p&gt;To alter the pixels, we can use one of the two helper methods: &lt;strong&gt;changePixelsColor()&lt;/strong&gt; and &lt;strong&gt;changePixelsToNegative()&lt;/strong&gt;. The first one will be used if we want to change the &lt;strong&gt;roiMat&lt;/strong&gt; pixels to a single color (in this case, black or red). The second one will be used if we want the find the negative of the ROI.&lt;/p&gt;
&lt;p&gt;This piece of the puzzle can be seen here:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cm"&gt;/** Creating a String variable to know which button was clicked. */&lt;/span&gt;
    &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;buttonChosen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getActionCommand&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     *  Using a switch statement to control what should be done based&lt;/span&gt;
&lt;span class="cm"&gt;     *  on which button the user clicked.&lt;/span&gt;
&lt;span class="cm"&gt;     *  If the user chose the black pixels option, we must change the&lt;/span&gt;
&lt;span class="cm"&gt;     *  chosen pixels to the color black throught the call of the&lt;/span&gt;
&lt;span class="cm"&gt;     *  changePixelsColors() method. The same in case of the red pixels&lt;/span&gt;
&lt;span class="cm"&gt;     *  option, but using the color red.&lt;/span&gt;
&lt;span class="cm"&gt;     *  If the user chose the negative option, we change the chosen pixels&lt;/span&gt;
&lt;span class="cm"&gt;     *  using the calculatePixelNegative() method.&lt;/span&gt;
&lt;span class="cm"&gt;     *  If the user chose the restore option, we only need to get the original&lt;/span&gt;
&lt;span class="cm"&gt;     *  pixels.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buttonChosen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Black Pixels&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;changePixelsColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bufferSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Red Pixels&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;changePixelsColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bufferSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Negative Pixels&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;changePixelsToNegative&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bufferSize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Restore Original Image&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;currentImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;originalImage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Putting the newly calculated pixels values on the region of&lt;/span&gt;
&lt;span class="cm"&gt;     * interest with the put() method.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="n"&gt;roiMat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * Calling the showImage() method the display the new image on&lt;/span&gt;
&lt;span class="cm"&gt;     * the screen.&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="the-java-unsigned-problem"&gt;
&lt;h2&gt;The Java unsigned problem&lt;/h2&gt;
&lt;p&gt;If you've worked with Java before, you should know that this programming language doesn't have an unsigned data type. For instance, a &lt;a class="reference external" href="https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"&gt;byte&lt;/a&gt; data type is an &lt;strong&gt;8-bit&lt;/strong&gt; signed two's complement integer. It can represent a number from &lt;strong&gt;-128 to 127&lt;/strong&gt;. If we're working with &lt;strong&gt;8-bit&lt;/strong&gt; images and representing the values in a byte array, how are we going to put the value &lt;strong&gt;200&lt;/strong&gt; if a byte in Java can't represent this number?&lt;/p&gt;
&lt;p&gt;The answer isn't so trivial, but it's a simple one.&lt;/p&gt;
&lt;p&gt;First, we're going to take our byte and use the &lt;strong&gt;AND&lt;/strong&gt; operator with the number &lt;strong&gt;0xff&lt;/strong&gt;. &lt;strong&gt;0xff&lt;/strong&gt; is the hexadecimal &lt;strong&gt;FF&lt;/strong&gt;, which is an integer of value &lt;strong&gt;255&lt;/strong&gt;. Its binary representation is &lt;strong&gt;00000000000000000000000011111111&lt;/strong&gt;, a &lt;strong&gt;32-bit&lt;/strong&gt; integer (int data type in Java). When we do this, we have a &lt;strong&gt;32-bit&lt;/strong&gt; number where the last &lt;strong&gt;8&lt;/strong&gt; bits are our desired value and the rest is &lt;strong&gt;0&lt;/strong&gt;. This means that we can do operations between integers and cast it back to a byte to put it in the array.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="changing-the-values-in-the-buffer"&gt;
&lt;h2&gt;Changing the values in the buffer&lt;/h2&gt;
&lt;p&gt;In the case of the &lt;strong&gt;changePixelsColor()&lt;/strong&gt;, this method receives an int array of length three where each position represents the value from each channel. The first position contains the blue channel, the second has the green channel and the third has the red channel. If we want the color red, we pass it &lt;strong&gt;new int[] {0, 0, 255}&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Inside the method, we iterate through the &lt;strong&gt;buffer&lt;/strong&gt; and put the values of the desired color in the channels. To change it to a black pixel value, we pass &lt;strong&gt;new int[] {0, 0, 0}&lt;/strong&gt;. For green? &lt;strong&gt;new int[] {0, 255, 0}&lt;/strong&gt;. For a color that I don't know? &lt;strong&gt;new int[] {31, 200, 109}&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;changePixelsToNegative()&lt;/strong&gt; method is a little different, but not much. The negative color of a color is its complementary color.&lt;/p&gt;
&lt;p&gt;Wow, that's a lot of colors.&lt;/p&gt;
&lt;p&gt;Don't worry! This value is the distance between the color value and &lt;strong&gt;255&lt;/strong&gt;. In this case, we need to get the current value in the &lt;strong&gt;buffer&lt;/strong&gt;, find the distance to &lt;strong&gt;255&lt;/strong&gt; and replace the value in the &lt;strong&gt;buffer&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Here's the code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;   * Helper method to calculate the negative complement of each value in each&lt;/span&gt;
&lt;span class="cm"&gt;   * channel on every pixel in the region of interest. Since Java does not have&lt;/span&gt;
&lt;span class="cm"&gt;   * any unsigned byte data type, we must cast the value to an int using the AND&lt;/span&gt;
&lt;span class="cm"&gt;   * operator with 0xff, find the complement (distance from the number to 255) and&lt;/span&gt;
&lt;span class="cm"&gt;   * cast the result to a byte type.&lt;/span&gt;
&lt;span class="cm"&gt;   * @param buffer - byte array with the values of the pixels from an image.&lt;/span&gt;
&lt;span class="cm"&gt;   * @param bufferSize - size of the byte array.&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;changePixelsToNegative&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bufferSize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;bufferSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;   * Helper method to change the pixel value of each value in each channel on every&lt;/span&gt;
&lt;span class="cm"&gt;   * pixel in the region of interest. Here, we must pass an array of lenght three with&lt;/span&gt;
&lt;span class="cm"&gt;   * the new pixel value. Since Java does not have any unsigned byte data type, we must pass&lt;/span&gt;
&lt;span class="cm"&gt;   * an int array and use the AND operator with 0xff, then cast it to a byte type.&lt;/span&gt;
&lt;span class="cm"&gt;   * @param buffer - byte array with the values of the pixels from an image.&lt;/span&gt;
&lt;span class="cm"&gt;   * @param bufferSize - size of the byte array.&lt;/span&gt;
&lt;span class="cm"&gt;   * @param newPixelValue - array with the values of each channel of the new color&lt;/span&gt;
&lt;span class="cm"&gt;   * that should be put in place of the current one, respecting the BGR model. It must be&lt;/span&gt;
&lt;span class="cm"&gt;   * an array of lenght three, where the number in the first position represent the blue&lt;/span&gt;
&lt;span class="cm"&gt;   * channel, the one in the second position represent the green channel and the third position&lt;/span&gt;
&lt;span class="cm"&gt;   * represents the red color.&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;changePixelsColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bufferSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;newPixelValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;bufferSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newPixelValue&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newPixelValue&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newPixelValue&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And I guess that's it! I hope that you've enjoyed today's post. Before I go, let's just see what color is &lt;strong&gt;new int[] {31, 200, 109}&lt;/strong&gt;:&lt;/p&gt;
&lt;img alt="Picture of andre's face with a rectangle kind of green in front. This green is the random color from the text." class="align-center" src="images/04-02-PlayingWithPixelsRandom.png" /&gt;
&lt;p&gt;Awesome!&lt;/p&gt;
&lt;/div&gt;
</content><category term="digital image processing"></category><category term="java"></category><category term="swing"></category><category term="opencv"></category><category term="dip"></category></entry><entry><title>Hello, Tina Fey's Bossypants</title><link href="https://andrefellipe.com/tina-fey-opencv.html" rel="alternate"></link><published>2018-10-17T22:00:00-03:00</published><updated>2018-10-17T22:00:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2018-10-17:/tina-fey-opencv.html</id><summary type="html">&lt;p class="first last"&gt;An application that loads an image using the OpenCV library. This post was written to the sound of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/San_Cisco#Studio_albums"&gt;San Cisco's&lt;/a&gt; eponymous album. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=7pl2L-ldozI"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Here's a not so hot take: Tina Fey is awesome. Her accomplishments as a performer, writer and producer on Saturday Night Live, 30 Rock, Mean Girls, Unbreakable Kimmy Schmidt and other projects make her one of the greatest comedy minds of the 21st century.&lt;/p&gt;
&lt;p&gt;And what's the relation between Tina Fey, the OpenCV library and Java?&lt;/p&gt;
&lt;p&gt;None. I just find her incredible and I'm loving her autobiography, 2011's Bossypants.&lt;/p&gt;
&lt;p&gt;Anyway, today we'll build an application where the user can choose a file from its file system and, if it's a valid image, it gets displayed on the screen. Let's call it &lt;strong&gt;Image Viewer&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You can see the final result below:&lt;/p&gt;
&lt;img alt="Screenshot of the Image Viewer application showing a picture of Bossypants, Tina Fey's autobiography." class="align-center" src="images/03-01-ImageViewer.png" /&gt;
&lt;div class="section" id="creating-the-user-interface"&gt;
&lt;h2&gt;Creating the user interface&lt;/h2&gt;
&lt;p&gt;Inside the OpenCV library, we have a cross-platform GUI called &lt;a class="reference external" href="https://docs.opencv.org/3.4.3/d7/dfc/group__highgui.html"&gt;HighGUI&lt;/a&gt; and a method called &lt;a class="reference external" href="https://docs.opencv.org/3.4.3/d7/dfc/group__highgui.html#ga453d42fe4cb60e5723281a89973ee563"&gt;imshow()&lt;/a&gt;. With this method, we can create a window and display an image within it. This is an easy and quick way to create prototypes.&lt;/p&gt;
&lt;p&gt;Unfortunately, there wasn't an &lt;strong&gt;imshow()&lt;/strong&gt; method available for Java for a good amount of time, so we see a lot of work and tutorials using the Swing package, a popular GUI API that we've used on other posts before.&lt;/p&gt;
&lt;p&gt;Thanks to this situation, we will use Swing to build the interfaces that we need. If your knowledge of Swing is limited, I recommend that you take a look at some &lt;a class="reference external" href="https://andrefellipe.com/category/swing.html"&gt;previous posts made here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Oh yeah, there's another thing, I'm using &lt;strong&gt;OpenCV 3.2.0&lt;/strong&gt; and I don't think there's a Java wrapper to the &lt;strong&gt;OpenCV HighGUI&lt;/strong&gt; module. Newer versions of the library have it, though.&lt;/p&gt;
&lt;p&gt;The first thing we need to do, assuming that you've already know a little about Swing and can create a basic frame, is load the OpenCV library. We do this with the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/lang/System.html#loadLibrary(java.lang.String)"&gt;loadLibrary()&lt;/a&gt; method from the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/lang/System.html"&gt;System&lt;/a&gt; class. Also, in the image above, we can see that our application needs a &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/javax/swing/JFileChooser.html"&gt;JFileChooser&lt;/a&gt; and a &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/javax/swing/JLabel.html"&gt;JLabel&lt;/a&gt;. This means that, before the main method and the frame constructor, we need bring all of these components to life. We do this with the following code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="cm"&gt;/** Loading the OpenCV library. */&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;loadLibrary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;NATIVE_LIBRARY_NAME&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/** Creating the JFileChooser object that it&amp;#39;s used to&lt;/span&gt;
&lt;span class="cm"&gt;   *  give the user a good experience while he searches for&lt;/span&gt;
&lt;span class="cm"&gt;   *  the image to be loaded. */&lt;/span&gt;
  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;JFileChooser&lt;/span&gt; &lt;span class="n"&gt;imageChooser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JFileChooser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="cm"&gt;/** Creating JLabel object that will display the image&lt;/span&gt;
&lt;span class="cm"&gt;   *  to the user. */&lt;/span&gt;
  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt; &lt;span class="n"&gt;imageLabel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this ready, we style the components to provide a better user experience, add them to the content pane and add the necessary listeners. For instance, we use the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/javax/swing/JFileChooser.html#addChoosableFileFilter(javax.swing.filechooser.FileFilter)"&gt;addChoosableFileFilter()&lt;/a&gt; method from the &lt;strong&gt;JFileChooser&lt;/strong&gt; to allow the user to filter the search results in the directories. In our case, we only want to display images, so we will filter the &lt;strong&gt;.gif&lt;/strong&gt;, &lt;strong&gt;.jpg&lt;/strong&gt; and &lt;strong&gt;.png&lt;/strong&gt; files. To do this, we need an object from the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/javax/swing/filechooser/FileNameExtensionFilter.html"&gt;FileNameExtensionFilter&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;The following code implements these tasks in our components:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cm"&gt;/** Personalizing the JFileChooser object, adding it to the content pane and adding an ActionListener for when the user&lt;/span&gt;
&lt;span class="cm"&gt;     *  clicks in the &amp;quot;Open&amp;quot; or &amp;quot;Cancel&amp;quot; option that shows up in the component. */&lt;/span&gt;
    &lt;span class="n"&gt;imageChooser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addChoosableFileFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileNameExtensionFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Graphics Files (.gif, .jpg, .png)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;jpg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;gridConstraints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;gridConstraints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gridx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;gridConstraints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gridy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;gridConstraints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;BOTH&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;getContentPane&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imageChooser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gridConstraints&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;imageChooser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ActionListener&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

      &lt;span class="nd"&gt;@Override&lt;/span&gt;
      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;actionPerformed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ActionEvent&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;imageChooserActionPerformed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="cm"&gt;/** Personalizing the JLabel object and adding it to the content pane. */&lt;/span&gt;
    &lt;span class="n"&gt;imageLabel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BorderFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createLineBorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;BLACK&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;imageLabel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setOpaque&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;imageLabel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;WHITE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;imageLabel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setHorizontalAlignment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SwingConstants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CENTER&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;imageLabel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setVerticalAlignment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SwingConstants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CENTER&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;gridConstraints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GridBagConstraints&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;gridConstraints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gridx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;gridConstraints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;gridy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;gridConstraints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;insets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Insets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;getContentPane&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imageLabel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gridConstraints&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now our interface is ready. When we see the &lt;strong&gt;imageChooser&lt;/strong&gt; component on our screen, we see that there are two buttons. One with the name &amp;quot;Open&amp;quot; and another one with the name &amp;quot;Cancel&amp;quot;. The &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/awt/event/ActionListener.html#actionPerformed(java.awt.event.ActionEvent)"&gt;actionPerformed()&lt;/a&gt; method is called when the user clicks on one of these buttons. Now, we need to define the behaviour of the application when one of these events is triggered. Our helper method &lt;strong&gt;imageChooserActionPerformed()&lt;/strong&gt; will handle this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="showing-the-image-on-the-screen"&gt;
&lt;h2&gt;Showing the image on the screen&lt;/h2&gt;
&lt;p&gt;With the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/awt/event/ActionEvent.html#getActionCommand()"&gt;getActionCommand()&lt;/a&gt; method from the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/awt/event/ActionEvent.html"&gt;ActionEvent&lt;/a&gt; class we can determine which button was clicked. We know that the property &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/javax/swing/JFileChooser.html#APPROVE_SELECTION"&gt;APPROVE_SELECTION&lt;/a&gt; from the &lt;strong&gt;JFileChooser&lt;/strong&gt; class is related to the &amp;quot;Open&amp;quot; button, so we assume that any other action will be related to the &amp;quot;Cancel&amp;quot; button since we're only interested in opening the image when the user clicks in the &amp;quot;Open&amp;quot; button.&lt;/p&gt;
&lt;p&gt;When the user clicks the &amp;quot;Open&amp;quot; button it means that he wants to see the image that the file represents in the screen. We need to find a way to pass this information to the OpenCV library so that it may help us open the file. Let's create a &lt;strong&gt;String&lt;/strong&gt; named &lt;strong&gt;filePath&lt;/strong&gt; that will store the path to the selected file. This string will store the result of the call of two methods: &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/javax/swing/JFileChooser.html#getSelectedFile()"&gt;getSelectedFile()&lt;/a&gt; from the &lt;strong&gt;JFileChooser&lt;/strong&gt; class and &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/io/File.html#toString()"&gt;toString()&lt;/a&gt; from the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/io/File.html"&gt;File&lt;/a&gt; class. Basically, we get the file that the user selected and get its path in the form of a &lt;strong&gt;String&lt;/strong&gt; object. To display the image using its path, we will create also a private method called &lt;strong&gt;showImage()&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand, when the user clicks &amp;quot;Cancel&amp;quot;, he doesn't want to use the application anymore, so it must close. We do this by calling &lt;strong&gt;exit(0)&lt;/strong&gt; from the &lt;strong&gt;System&lt;/strong&gt; class.&lt;/p&gt;
&lt;p&gt;This is the code that makes up an important part of the application:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="cm"&gt;/** Helper method to decide what the application should do after the user interaction.&lt;/span&gt;
&lt;span class="cm"&gt;   *  If the user selects a file and clicks the &amp;quot;Open&amp;quot; button, it calls other methods&lt;/span&gt;
&lt;span class="cm"&gt;   *  that have the responsability to process the file and, if it&amp;#39;s a valid image, show&lt;/span&gt;
&lt;span class="cm"&gt;   *  in the JLabel object.&lt;/span&gt;
&lt;span class="cm"&gt;   *  If the user clicks the &amp;quot;Cancel&amp;quot; button, it closes the application. */&lt;/span&gt;
  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;imageChooserActionPerformed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ActionEvent&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getActionCommand&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JFileChooser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;APPROVE_SELECTION&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;filePath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imageChooser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSelectedFile&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;showImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filePath&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;strong&gt;showImage()&lt;/strong&gt; method is the juicy part of the application. It's here that we start to deal with the OpenCV library. Our plan is simple: we take the string with the path, read it, transform it into an image that can be displayed on the screen and readjust the screen to the size of the image.&lt;/p&gt;
&lt;p&gt;To do this, we need an object from the  &lt;a class="reference external" href="https://docs.opencv.org/3.4.3/d3/d63/classcv_1_1Mat.html#details"&gt;Mat&lt;/a&gt; class. This class can be used to store grayscale or color images. We use the &lt;a class="reference external" href="https://docs.opencv.org/3.4.3/d4/da8/group__imgcodecs.html#ga288b8b3da0892bd651fce07b3bbd3a56"&gt;imread()&lt;/a&gt; method from the &lt;a class="reference external" href="https://docs.opencv.org/3.4.3/d4/da8/group__imgcodecs.html"&gt;Imgcodecs&lt;/a&gt; class to load an image from a file. We pass what this method returns to our &lt;strong&gt;image&lt;/strong&gt; object from the &lt;strong&gt;Mat&lt;/strong&gt; class. In case everything works accordingly to plan, we need to transform the &lt;strong&gt;image&lt;/strong&gt; object to an object of the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/awt/Image.html"&gt;Image&lt;/a&gt; class, since our &lt;strong&gt;imageLabel&lt;/strong&gt; from the Swing package doesn't understand what a &lt;strong&gt;Mat&lt;/strong&gt; object is. In this case, to be more specific, we transform it to an object of the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/awt/image/BufferedImage.html"&gt;BufferedImage&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;With our image prepared, we just set it as the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/javax/swing/Icon.html"&gt;Icon&lt;/a&gt; of our &lt;strong&gt;imageLabel&lt;/strong&gt; to show it on the screen and readjust the size of the window to make sure the user sees everything.&lt;/p&gt;
&lt;p&gt;Guess what we need to do before setting the icon? Yep, another transformation, now from our &lt;strong&gt;Image&lt;/strong&gt; object to an object of the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/javax/swing/ImageIcon.html"&gt;ImageIcon&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;The following code shows our full &lt;strong&gt;showImage()&lt;/strong&gt; method and how to do everything explained above:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="cm"&gt;/** This method is responsible for the exhibition of the image in the screen.&lt;/span&gt;
&lt;span class="cm"&gt;   *  It receives a String with the path to an image inside a directory and shows&lt;/span&gt;
&lt;span class="cm"&gt;   *  the image on the user&amp;#39;s screen.  */&lt;/span&gt;
  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;showImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;filePath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/** Initializing the Mat object that represents the pixels of the image. */&lt;/span&gt;
    &lt;span class="n"&gt;Mat&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Mat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/** Using the method imread() to create a Mat object from the file chosen by&lt;/span&gt;
&lt;span class="cm"&gt;     *  the user. The try/catch block is used because of a bug in the OpenCV Java&lt;/span&gt;
&lt;span class="cm"&gt;     *  bindings that throws an Exception if the file chosen has less than 140&lt;/span&gt;
&lt;span class="cm"&gt;     *  characters. If it isn&amp;#39;t used, we would see an error message in the console. */&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Imgcodecs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filePath&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/** Testing if the image was loaded as expected. The dataAddr() method points&lt;/span&gt;
&lt;span class="cm"&gt;     *  to an internal data address. If it&amp;#39;s equal to 0, the imread method wasn&amp;#39;t&lt;/span&gt;
&lt;span class="cm"&gt;     *  able to create a valid image from the chosen file. If it isn&amp;#39;t, we create&lt;/span&gt;
&lt;span class="cm"&gt;     *  an Image object from the Mat since we need to make this conversion to show&lt;/span&gt;
&lt;span class="cm"&gt;     *  the resulting image on the screen. */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dataAddr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="cm"&gt;/** Showing the dialog box with an error message if the file isn&amp;#39;t a valid&lt;/span&gt;
&lt;span class="cm"&gt;       *  image. */&lt;/span&gt;
      &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;showConfirmDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;The file chosen is not a valid image&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s"&gt;&amp;quot;Invalid Image&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DEFAULT_OPTION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;JOptionPane&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ERROR_MESSAGE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

      &lt;span class="cm"&gt;/** Creating an Image object from the Mat object. */&lt;/span&gt;
      &lt;span class="n"&gt;Image&lt;/span&gt; &lt;span class="n"&gt;loadedImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toBufferedImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="cm"&gt;/** Setting the newly created Image as the Icon of&lt;/span&gt;
&lt;span class="cm"&gt;       *  the JLabel that shows the image. */&lt;/span&gt;
      &lt;span class="n"&gt;imageLabel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setIcon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ImageIcon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loadedImage&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

      &lt;span class="cm"&gt;/** Resizing the window to make sure that, if a new image is loaded,&lt;/span&gt;
&lt;span class="cm"&gt;       *  its display on the screen doesn&amp;#39;t get limited by the previous image&lt;/span&gt;
&lt;span class="cm"&gt;       *  size. */&lt;/span&gt;
      &lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see in the code above, there's a helper method that we didn't discussed so far, the &lt;strong&gt;toBufferedImage()&lt;/strong&gt; method. It was made to receive a Mat object and return an &lt;strong&gt;Image&lt;/strong&gt; object.&lt;/p&gt;
&lt;p&gt;The first step of the transformation is to find out if we're talking about a grayscale or BGR image. To find this informaton, we check the number of channels of our &lt;strong&gt;matImage&lt;/strong&gt;, the image in question represented as a &lt;strong&gt;Mat&lt;/strong&gt; object. If it has more than one channel, it's a BGR image (in fact, there will be three channels, one for each color of the RGB model). The variable &lt;strong&gt;type&lt;/strong&gt; will store the information about what color model we're using. The &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/awt/image/BufferedImage.html#TYPE_BYTE_GRAY"&gt;TYPE_BYTE_GRAY&lt;/a&gt; or the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/awt/image/BufferedImage.html#TYPE_3BYTE_BGR"&gt;TYPE_3BYTE_BGR&lt;/a&gt; property will tell it to the variable which model should we use.&lt;/p&gt;
&lt;p&gt;Now we need to have a tricky conversation. The content of the &lt;strong&gt;matImage&lt;/strong&gt; object is the data about the image. We will take all of this content and put it on a byte array, since we're here representing the image as a 8-bit image. Let's call it &lt;strong&gt;buffer&lt;/strong&gt;. Then, we will create the &lt;strong&gt;bufferedImage&lt;/strong&gt; object from the &lt;strong&gt;BufferedImage&lt;/strong&gt; class and pass to it all of the content from the &lt;strong&gt;matImage&lt;/strong&gt; object, meaning, of course, the &lt;strong&gt;buffer&lt;/strong&gt;. This is not a direct process, so hear me out.&lt;/p&gt;
&lt;p&gt;Since we have images from different sizes, we first need to find out what's the size of the &lt;strong&gt;buffer&lt;/strong&gt; that we need. An object from the &lt;strong&gt;Mat&lt;/strong&gt; class has rows, columns and channels to represent the pixels from an image. Each pixel, positioned in a point represented by a row and a column number, has one channel if it's a grayscale image or three if it's a color image. To discover the size of our &lt;strong&gt;buffer&lt;/strong&gt; that stores the content of the image, we only need to multiply the number of channels with the number of rows and the number of columns.&lt;/p&gt;
&lt;p&gt;Next, we put all of the elements of &lt;strong&gt;matImage&lt;/strong&gt; in the &lt;strong&gt;buffer&lt;/strong&gt; using the &lt;a class="reference external" href="https://docs.opencv.org/3.4/javadoc/org/opencv/core/Mat.html#get-int-int-byte:A-"&gt;get()&lt;/a&gt; method from the &lt;strong&gt;Mat&lt;/strong&gt; class. Now we're ready to create our &lt;strong&gt;BufferedImage&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Before creating this object, it's important to remember that our &lt;strong&gt;bufferedImage&lt;/strong&gt; needs to be of the same size as the &lt;strong&gt;matImage&lt;/strong&gt; and have the corresponding type (8-bit grayscale or 8-bit color image, per example).&lt;/p&gt;
&lt;p&gt;Now the question is: how do we put the data from the &lt;strong&gt;buffer&lt;/strong&gt; in the &lt;strong&gt;bufferedImage&lt;/strong&gt;? Do not fear, my friend, it's a weird, but easy process.&lt;/p&gt;
&lt;p&gt;We only need to get the array of bytes of the &lt;strong&gt;bufferedImage&lt;/strong&gt;. Then, we use the &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/lang/System.html#arraycopy(java.lang.Object,int,java.lang.Object,int,int)"&gt;arraycopy()&lt;/a&gt; method from the &lt;strong&gt;System&lt;/strong&gt; class to finalize our image.&lt;/p&gt;
&lt;p&gt;Inside our &lt;strong&gt;bufferedImage&lt;/strong&gt; there's a &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/awt/image/DataBufferByte.html"&gt;DataBufferByte&lt;/a&gt;, a class that encapsulates an array of bytes. The data in this class it's the destination that we need to find to pass the content of our &lt;strong&gt;buffer&lt;/strong&gt;. This &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/awt/image/DataBuffer.html"&gt;DataBuffer&lt;/a&gt; is encapsulated by a &lt;a class="reference external" href="https://docs.oracle.com/javase/10/docs/api/java/awt/image/Raster.html"&gt;Raster&lt;/a&gt;, a class that represents a rectangular array of pixels. We chain together a couple of get methods from those classes to get this data.&lt;/p&gt;
&lt;p&gt;If I were a betting man, I would bet that you didn't completely understood everything I've just written, but, by looking at the following piece of code, you probably will see that this is not a difficult process.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="cm"&gt;/** Helper method to transform a Mat object in a BufferedImage object. */&lt;/span&gt;
  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt; &lt;span class="nf"&gt;toBufferedImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mat&lt;/span&gt; &lt;span class="n"&gt;matImage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/** Using the channels() method from Mat to determine if we have&lt;/span&gt;
&lt;span class="cm"&gt;     *  a grayscale or BGR image. */&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BufferedImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TYPE_BYTE_GRAY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;channels&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BufferedImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TYPE_3BYTE_BGR&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/** We need to create a byte array that will store the matImage contents.&lt;/span&gt;
&lt;span class="cm"&gt;     *  We find the size of this array through the number of elements in the&lt;/span&gt;
&lt;span class="cm"&gt;     *  Mat object. */&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bufferSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;channels&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;matImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;matImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/** Creating the byte array. */&lt;/span&gt;
    &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bufferSize&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cm"&gt;/** Using the get() method to put all of the elements of the Mat object&lt;/span&gt;
&lt;span class="cm"&gt;     *  with the image inside the byte array. */&lt;/span&gt;
    &lt;span class="n"&gt;matImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/** Creating a BufferedImage (subclass of Image) with the same size and&lt;/span&gt;
&lt;span class="cm"&gt;     *  appropriate type as the image represented by the Mat object. */&lt;/span&gt;
    &lt;span class="n"&gt;BufferedImage&lt;/span&gt; &lt;span class="n"&gt;bufferedImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;BufferedImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;matImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/** Getting the data from the DataBuffer (a class that encapsulates one or more data arrays)&lt;/span&gt;
&lt;span class="cm"&gt;     *  of the BufferedImage object. The DataBuffer itself is encapsulated by a Raster, a class&lt;/span&gt;
&lt;span class="cm"&gt;     *  that represents a rectangular array of pixels.&lt;/span&gt;
&lt;span class="cm"&gt;     *  This step is done so that we can have access to the pixels of the BufferedImage object&lt;/span&gt;
&lt;span class="cm"&gt;     *  that will receive the data from the Mat object. */&lt;/span&gt;
    &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;byte&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;targetPixels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;DataBufferByte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;bufferedImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRaster&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getDataBuffer&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;getData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/** Copying all of the byte array with the data from the Mat object to the pixels of the&lt;/span&gt;
&lt;span class="cm"&gt;     *  BufferedImage, thus, creating an Image object that can be shown in a JLabel component. */&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;arraycopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;targetPixels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bufferedImage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's it. It's also important to note that, in our application, if you don't choose an image, a message shows up informing you that you didn't choose a valid image, as you can see below:&lt;/p&gt;
&lt;img alt="Screenshot of the Image Viewer application showing an error because the user tried to open a Markdown file, instead of an image." class="align-center" src="images/03-02-ImageViewerError.png" /&gt;
&lt;p&gt;Here's the &lt;a class="reference external" href="https://github.com/andrefellipe/dip/blob/master/src/Exercise01.java"&gt;link&lt;/a&gt; for the full code if you need to check it out. Thanks for reading! Here's also a sneak peek of our next post about the OpenCV Library using today's application:&lt;/p&gt;
&lt;img alt="Screenshot of the Image Viewer application showing our next application. In the image, there's a negative image of my face." class="align-center" src="images/03-03-ImageViewerSneakPeek.png" /&gt;
&lt;/div&gt;
</content><category term="digital image processing"></category><category term="java"></category><category term="swing"></category><category term="opencv"></category><category term="dip"></category></entry><entry><title>Hello, OpenCV and Java</title><link href="https://andrefellipe.com/opencv-java.html" rel="alternate"></link><published>2018-08-29T16:50:00-03:00</published><updated>2018-10-03T23:40:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2018-08-29:/opencv-java.html</id><summary type="html">&lt;p class="first last"&gt;A tutorial to use OpenCV with Java. This post was written to the sound of Hall &amp;amp; Oates' &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Big_Bam_Boom"&gt;Big Bam Boom&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=s_8KR-n2fBQ"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This tutorial will not teach you how to compile your own OpenCV using the source code. I recommend that you try this at a future date for learning purposes. At this moment, let's try a different approach. I am using Ubuntu 18.04 and this tutorial will only work for distributions of the Linux operating system. You will see why below.&lt;/p&gt;
&lt;p&gt;Also, I expect that you have a general knowledge about Java. If you know nothing about it so far, just follow the instructions.&lt;/p&gt;
&lt;p&gt;Let's dive in!&lt;/p&gt;
&lt;div class="section" id="checking-if-you-have-java"&gt;
&lt;h2&gt;Checking if you have Java&lt;/h2&gt;
&lt;p&gt;Open the terminal (ctrl + alt + T).&lt;/p&gt;
&lt;p&gt;Run the following command to check if you already have Java:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;java -version
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You are good to go if you see something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;java version &amp;quot;1.8.0_181&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;Java(TM) SE Runtime Environment (build 1.8.0_181-b13)&lt;/span&gt;
&lt;span class="go"&gt;Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may have another version of Oracle's Java or OpenJDK, but this should not be a problem.&lt;/p&gt;
&lt;p&gt;If you do not see the message above or something similar, you will need to install Java. If you can see the message, jump to the next section.&lt;/p&gt;
&lt;p&gt;Run the following commands to install Oracle's Java 8:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;sudo add-apt-repository ppa:webupd8team/java
&lt;span class="gp"&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class="gp"&gt;$ &lt;/span&gt;sudo apt-get install oracle-java8-installer
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run the &lt;strong&gt;java -version&lt;/strong&gt; command again to make sure everything is fine.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="download-opencv"&gt;
&lt;h2&gt;Download OpenCV&lt;/h2&gt;
&lt;p&gt;Run the following command to install the OpenCV library:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;sudo apt-get install libopencv-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-our-first-program"&gt;
&lt;h2&gt;Creating Our First Program&lt;/h2&gt;
&lt;p&gt;Using your favorite text editor, create a file named &lt;strong&gt;HelloOpenCVJava.java&lt;/strong&gt;. I am using &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Vim_(text_editor)"&gt;Vim&lt;/a&gt;, so the command would be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vim HelloOpenCVJava.java
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, copy and paste the following code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.opencv.core.Core&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HelloOpenCVJava&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="cm"&gt;/** Loading the OpenCV library. */&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;loadLibrary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;NATIVE_LIBRARY_NAME&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/** Printing the OpenCV version. */&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello OpenCV &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;VERSION&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/** Printing the Java version. */&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello to you too, Java &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;java.version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's breakdown the &lt;strong&gt;HelloOpenCVJava&lt;/strong&gt; application.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;import&lt;/strong&gt; keyword is necessary to load the &lt;strong&gt;Core&lt;/strong&gt; class from the OpenCV library.&lt;/p&gt;
&lt;p&gt;We use the &lt;strong&gt;NATIVE_LIBRARY_NAME&lt;/strong&gt; property of the Core class to find the corresponding name of the library and use as parameter to the &lt;strong&gt;loadLibrary&lt;/strong&gt; method. In this case, it returns &lt;strong&gt;opencv_java320&lt;/strong&gt;. This will allow us to use the OpenCV library. After that, we print the versions of the library and Java.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="compiling-and-running-helloopencvjava"&gt;
&lt;h2&gt;Compiling and Running HelloOpenCVJava&lt;/h2&gt;
&lt;p&gt;Your project directory must be looking like this right now:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;.&lt;/span&gt;
&lt;span class="go"&gt;|__ HelloOpenCVJava.java&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If it is, run the following command to compile HelloOpenCVJava.java:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;javac -cp /usr/share/OpenCV/java/opencv-320.jar HelloOpenCVJava.java
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you should have your bytecode class file &lt;strong&gt;HelloOpenCVJava.class&lt;/strong&gt;. Here's how the directory should look like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;.&lt;/span&gt;
&lt;span class="go"&gt;|__ HelloOpenCVJava.class&lt;/span&gt;
&lt;span class="go"&gt;|__ HelloOpenCVJava.java&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://docs.oracle.com/javase/8/docs/technotes/tools/windows/findingclasses.html#BABBFCIJ"&gt;-cp flag&lt;/a&gt; tells the compiler to set the system property java.class.path, which is a list of directories, JAR files and ZIP files that contain class files. We are using here to indicate that we want to find our &lt;strong&gt;opencv-320.jar&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We have everything we need to run our application now. We do this with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;java -Djava.library.path&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/jni -cp /usr/share/OpenCV/java/opencv-320.jar:. HelloOpenCVJava
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;-Djava.library.path&lt;/strong&gt; sets the &lt;strong&gt;java.library.path&lt;/strong&gt; property (-D is a flag to set a system property) to inform the JVM where it can locate native libraries. This property is part of the system environment used by Java, in order to find and load native libraries used by an application.&lt;/p&gt;
&lt;p&gt;This should be your output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;Hello OpenCV 3.2.0!&lt;/span&gt;
&lt;span class="go"&gt;Hello to you too, Java 1.8.0_181!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second line may change depending on your version of Java.&lt;/p&gt;
&lt;p&gt;We did it! Well, I did it. I hope that you can replicate this in your machine.&lt;/p&gt;
&lt;p&gt;To finish, I would like to point out that in the &lt;a class="reference external" href="https://opencv-java-tutorials.readthedocs.io/en/latest/01-installing-opencv-for-java.html#set-up-opencv-for-java-in-eclipse"&gt;OpenCV Java Tutorials Documentation&lt;/a&gt; there's a pretty neat tutorial on how to use OpenCV in an IDE like &lt;a class="reference external" href="https://www.eclipse.org/"&gt;Eclipse&lt;/a&gt;, if you prefer to work in such fashion.&lt;/p&gt;
&lt;p&gt;In the next chapter of this journey, we will play a little with Mat objects and some images. Stay tuned!&lt;/p&gt;
&lt;/div&gt;
</content><category term="digital image processing"></category><category term="java"></category><category term="opencv"></category><category term="dip"></category></entry><entry><title>Hello World, Hello Pelican</title><link href="https://andrefellipe.com/introduction.html" rel="alternate"></link><published>2018-08-29T01:30:00-03:00</published><updated>2018-10-03T23:05:00-03:00</updated><author><name>Andre Fellipe da Silva</name></author><id>tag:andrefellipe.com,2018-08-29:/introduction.html</id><summary type="html">&lt;p class="first last"&gt;A brief introduction to the site. This post was written to the sound of The Replacement's &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Tim_(album)"&gt;Tim&lt;/a&gt;. You can listen one of the songs &lt;a class="reference external" href="https://www.youtube.com/watch?v=cbhQKffugNk"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;strong&gt;andrefellipe.com&lt;/strong&gt; was an idea that I had a long time ago to support my personal projects.&lt;/p&gt;
&lt;p&gt;I've developed this personal page using &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Open-source_software"&gt;open-source&lt;/a&gt; tools, so the very least I can do is thank and mention the projects and the people that made this site possible.&lt;/p&gt;
&lt;p&gt;This site is powered by &lt;a class="reference external" href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;, a static site generator written in &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;. Thanks to its great documentation and community support, I was able to get everything up and running in a couple of hours. Pelican has a lot of themes developed by its community. The one that you're seeing now is called &lt;a class="reference external" href="https://github.com/alexandrevicenzi/Flex"&gt;Flex&lt;/a&gt; and it was developed by another brazilian, &lt;a class="reference external" href="http://www.alexandrevicenzi.com/"&gt;Alexandre Vicenzi&lt;/a&gt;. I specially love how it looks in a mobile device.&lt;/p&gt;
&lt;p&gt;I would also like to thank the second best student of the Federal University of Rio Grande do Norte, &lt;a class="reference external" href="https://github.com/vitorsr"&gt;Vítor Saraiva&lt;/a&gt;. His &lt;a class="reference external" href="https://vitorsr.github.io/"&gt;website&lt;/a&gt; was the source of inspiration to this idea.&lt;/p&gt;
</content><category term="Introduction"></category><category term="pelican"></category></entry></feed>